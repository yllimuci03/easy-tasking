{"version":3,"sources":["mutations/logout.js","queries/user.js","components/Header.jsx","components/Sidebar.jsx","pages/Home.jsx","pages/NotFound.jsx","components/Spinner.jsx","queries/taskQueries.js","components/TeamMemberInfo.jsx","components/CreatorInfo.jsx","mutations/taskMutations.js","components/DeleteTaskButton.jsx","queries/teamMemberQueries.js","components/EditTaskForm.jsx","pages/Task.jsx","mutations/user.js","mutations/login.js","components/Auth.jsx","components/AddTaskModal.jsx","components/TaskCard.jsx","components/BarChart.jsx","components/Tasks.jsx","pages/AdminDashboard.jsx","components/UserTasks.jsx","pages/UserDashboard.jsx","mutations/teamMemberMutations.js","components/TeamMemberRow.jsx","components/AddTeamMemberModal.jsx","pages/TeamMembers.jsx","pages/UserTeamMembers.jsx","components/UserRow.jsx","components/AllUsers.jsx","pages/Unauthorized.jsx","pages/AssignedToYou.jsx","components/DeleteUserButton.jsx","components/EditProfileForm.jsx","pages/Profile.jsx","components/Stat.jsx","pages/AdminStatistics.jsx","pages/UserStatistics.jsx","App.js","reportWebVitals.js","index.js","images/hero1.jpg"],"names":["LOGOUT","gql","_templateObject","Object","taggedTemplateLiteral","FETCH_USERS","user_templateObject","GET_USER","_templateObject2","Header","_ref","user","setUser","showSidebar","setShowSidebar","navigate","useNavigate","useEffect","newUser","JSON","parse","localStorage","getItem","_useMutation","useMutation","variables","id","logout","slicedToArray","handleLogout","clear","timeout","setTimeout","clearTimeout","data","useQuery","userImage","fileSystem","userName","name","charAt","react_default","a","createElement","className","type","onClick","index_esm","style","color","src","alt","react_router_dom","to","Sidebar","_useState","useState","window","innerWidth","_useState2","size","setSize","isAdmin","role","checkSize","addEventListener","removeEventListener","concat","fa_index_esm","hi_index_esm","gi_index_esm","cg_index_esm","Home","variant","image","NotFound","Spinner","GET_TASKS","taskQueries_templateObject","GET_TASK","taskQueries_templateObject2","TeamMemberInfo","teamMember","Fragment","email","phone","creator","ADD_TASK","taskMutations_templateObject","DELETE_TASK","taskMutations_templateObject2","UPDATE_TASK","_templateObject3","DeleteTaskButton","taskId","onCompleted","refetchQueries","query","deleteTask","deleteTaskImage","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","file","wrap","_context","prev","next","abrupt","axios","delete","t0","console","log","stop","_x","apply","this","arguments","task","fileName","GET_TEAM_MEMBERS","teamMemberQueries_templateObject","EditTaskForm","teamMemberId","setTeamMemberId","_useState3","title","_useState4","setTitle","_useState5","description","_useState6","setDescription","_useState7","status","_useState8","setStatus","_useState9","priority","_useState10","setPriority","_useState11","system","_useState12","setSystem","_useState13","workingHoursToComplete","_useState14","setWorkingHourToComplete","_useState15","Date","toISOString","updatedAt","_useState17","_useState18","previousFileName","_useState19","_useState20","setFileSystem","_useState21","_useState22","setFileName","_useState23","_useState24","setFile","_useState25","_useState26","isLoading","setIsLoading","useParams","_useQuery","loading","error","teamMembers","filter","member","creatorId","updateTask","postImage","_postImage","EditTaskForm_regeneratorRuntime","_callee3","formData","result","_context3","FormData","append","post","headers","Content-Type","sent","uploadImage","e","preventDefault","location","_x2","_ref3","_callee2","_context2","_x3","onChange","target","files","fontSize","onSubmit","alert","value","htmlFor","map","key","Task","components_Spinner","fontWeight","createdAt","CreatorInfo","components_TeamMemberInfo","assignedTo","components_EditTaskForm","components_DeleteTaskButton","ADD_USER","mutations_user_templateObject","DELETE_USER","user_templateObject2","UPDATE_USER","user_templateObject3","LOGIN","login_templateObject","Auth","setName","setEmail","password","setPassword","setRole","_useState16","isLogin","setIsLogin","setLoading","errorMessage","setErrorMessage","update","_update","Auth_regeneratorRuntime","cache","login","setItem","stringify","_useMutation2","_useMutation3","_update2","addUser","_x4","_x5","_callee5","_context5","timeout1","timeout2","_ref4","_x6","_ref5","_callee4","_context4","_x7","data-bs-dismiss","AddTaskModal","setCreatedAt","addTask","tasks","readQuery","writeQuery","toConsumableArray","userId","adminTeamMembers","userTeamMembers","AddTaskModal_regeneratorRuntime","handleSubmit","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","aria-label","TaskCard","BarChart","chartData","width","margin","dist","Tasks","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","length","displayTasks","slice","pendingPriorityOne","pendingPriorityTwo","pendingPriorityThree","completedPriorityOne","completedPriorityTwo","completedPriorityThree","components_TaskCard","react_paginate_default","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName","components_BarChart","labels","datasets","label","backgroundColor","AdminDashboard","components_AddTaskModal","components_Tasks","UserTasks","userTasks","UserDashboard","components_UserTasks","ADD_TEAM_MEMBER","teamMemberMutations_templateObject","DELETE_TEAM_MEMBER","teamMemberMutations_templateObject2","TeamMemberRow","deleteTeamMember","AddTeamMemberModal","setPhone","addTeamMember","TeamMembers","displayTeamMembers","components_AddTeamMemberModal","components_TeamMemberRow","UserTeamMembers","displayUserTeamMembers","UserRow","deleteUser","users","AllUsers","displayUsers","components_UserRow","Unauthorized","md_index_esm","AssignedToYou","responsible","objectSpread","DeleteUserButton","deleteUserImage","DeleteUserButton_regeneratorRuntime","EditProfileForm","setPreviousFileName","EditProfileForm_regeneratorRuntime","updateUser","Profile","height","class","components_EditProfileForm","components_DeleteUserButton","Stat","stat","borderBottom","icon","amount","AdminStatistics","monthlyCreated","monthlyCompleted","getTasks","getUsers","getTeamMembers","pendingTasks","completedTasks","priorityOne","priorityTwo","priorityThree","totalTasks","totalUsers","totalTeamMembers","monthCreatedPending","monthCompleted","currentYear","getFullYear","includes","months","currentMonth","getMonth","recentMonths","earlierMonths","recentCreated","earlierCreated","recentCompleted","earlierCompleted","stats","opacity","si_index_esm","index","src_components_Stat","UserStatistics","textDecoration","InMemoryCache","typePolicies","Query","fields","merge","existing","incoming","client","ApolloClient","uri","App","ApolloProvider","src_components_Sidebar","components_Header","react_router","path","element","src_pages_Home","pages_AdminDashboard","pages_Unauthorized","pages_UserDashboard","components_Auth","components_AllUsers","pages_TeamMembers","pages_UserTeamMembers","pages_Task","pages_AssignedToYou","pages_Profile","pages_AdminStatistics","pages_UserStatistics","pages_NotFound","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.3b0555ef.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst LOGOUT = gql`\r\nmutation logout($id: ID!){\r\n logout(id: $id){\r\n  id,\r\n  token,\r\n }\r\n}\r\n`\r\n\r\nexport {LOGOUT};","import { gql } from \"@apollo/client\";\r\n\r\n\r\nconst FETCH_USERS = gql`\r\nquery getUsers{\r\n   users{\r\n      id\r\n      name\r\n      email\r\n      role\r\n      token\r\n      tokenExpiration\r\n      fileSystem\r\n   }\r\n}\r\n`\r\n\r\nconst GET_USER = gql`\r\nquery getUser($id: ID!){\r\n   user(id: $id){\r\n      id\r\n      name\r\n      email\r\n      role\r\n      fileSystem\r\n      fileName\r\n      token\r\n      tokenExpiration\r\n      tasks{\r\n         id\r\n         title\r\n         status\r\n         priority\r\n         system\r\n      }\r\n      teamMembers{\r\n         id\r\n         name\r\n         email\r\n         role\r\n         phone\r\n      }\r\n   }\r\n}\r\n`\r\n\r\n\r\nexport {FETCH_USERS, GET_USER};","import React, {useEffect, } from \"react\"\r\nimport decode from 'jwt-decode';\r\nimport {AiOutlineMenuFold} from 'react-icons/ai'\r\nimport { useMutation, useQuery } from \"@apollo/client\"\r\nimport './Sidebar.css'\r\nimport { LOGOUT } from \"../mutations/logout\";\r\n\r\nimport { GET_USER, } from '../queries/user'\r\n\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nconst Header = ({user, setUser, showSidebar,setShowSidebar}) => {\r\n  const navigate = useNavigate()\r\n\r\n useEffect(()=>{\r\n  const newUser = JSON.parse(localStorage.getItem('user'))\r\n  if(newUser){\r\n    setUser(newUser)\r\n  }\r\n },[])\r\n\r\n \r\n const [logout] = useMutation(LOGOUT, {\r\n   variables:{id: user?user.id: null},\r\n   \r\n  })\r\n  \r\n  \r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    logout(user? user.id: null);\r\n    setUser(null);\r\n    navigate('/');\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n    const timeout = setTimeout(()=>handleLogout(), 3600 * 1000);\r\n  \r\n    return ()=> clearTimeout(timeout)\r\n\r\n}, [])\r\n\r\n const id = user?user.id:'';\r\n const{data} = useQuery(GET_USER, {\r\n  variables: {\r\n   id: id\r\n  }\r\n })\r\n if(data){\r\n  setUser(data.user)\r\n }\r\nconst userImage = data?data.user.fileSystem : null;\r\nconst userName = data?data.user.name.charAt(0): '';\r\n\r\n  return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn \" onClick={()=>setShowSidebar(!showSidebar)}>\r\n                        <AiOutlineMenuFold className=\"toggle-icon\"/>\r\n                    </button>\r\n                    \r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                      <h2><span>Easy</span>Tasking</h2>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" >\r\n                      <h2 style={{color: 'rgb(29, 8, 78)'}}>DASHBOARD</h2>\r\n                    </div>\r\n                    <div className=\"profile\">\r\n                      {user && <h4>{user.name}</h4>}\r\n                      {userImage?<img className=\"avatar avatar-nav avatar-16 bg-light rounded-circle text-white\" src={userImage} alt={user.name}/>:\r\n                      <span className=\"avatar text-nav avatar-16  bg-success text-white rounded-circle\">{userName}</span> }\r\n                    </div>\r\n                 {user?<button className=\"btn btn-primary\" \r\n                 onClick={handleLogout}>\r\n                       Logout\r\n                    </button>:\r\n                     <button className=\"btn btn-secondary\" >\r\n                      <Link to='/auth'>Login</Link>\r\n                    </button> }\r\n                </div>\r\n            </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {FaChartBar} from 'react-icons/fa'\r\nimport {FaTasks} from 'react-icons/fa'\r\nimport {HiUsers} from 'react-icons/hi'\r\nimport {FaHandPointRight} from 'react-icons/fa'\r\nimport {GiTeamIdea} from 'react-icons/gi'\r\nimport {CgProfile} from 'react-icons/cg'\r\n\r\nimport './Sidebar.css'\r\nconst Sidebar = ({showSidebar, setShowSidebar, user}) => {\r\n     const [size, setSize] = useState(window.innerWidth) \r\n\r\n    const adminCheck = user?user.role: '';\r\n    const isAdmin = adminCheck === 'authorizedAdmin';\r\n\r\n     const checkSize = () => {\r\n     setSize(window.innerWidth)\r\n }\r\n\r\n  useEffect(()=>{\r\n   window.addEventListener('resize', checkSize)\r\n   return ()=> window.removeEventListener('resize', checkSize)\r\n })\r\n\r\n\r\n  return (\r\n    \r\n        <nav id=\"sidebar\" className={`${!showSidebar? 'active': ''} `} >\r\n            {isAdmin && <ul className=\"list-unstyled components\">\r\n                <h5 >ADMIN TABS</h5>\r\n                \r\n                <li>\r\n                    <NavLink to='/adminDashboard' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                    <div className='d-flex align-items-center'>\r\n                     <FaTasks className='icon' style={{color: 'blueviolet'}} />\r\n                     <div>All Tasks</div>\r\n                    </div>\r\n\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/allUsers' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <HiUsers className='icon' style={{color: 'darkgray'}} />\r\n                            <div>All Users</div>\r\n                        </div>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to='/allTeamMembers' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <GiTeamIdea className='icon' style={{color: 'darkblue'}} />\r\n                            <div>All Team Members</div>\r\n                        </div>\r\n                    </NavLink>\r\n                </li>\r\n\r\n                            \r\n                <li>\r\n                    <NavLink to='/allStats' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <FaChartBar className='icon' style={{color: 'darkgreen'}} />\r\n                            <div>Stats</div>\r\n                        </div>\r\n\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/profile' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <CgProfile className='icon' style={{color: 'darkred'}} />\r\n                            <div>Profile</div>\r\n                        </div>\r\n\r\n                    </NavLink>\r\n\r\n                </li>\r\n            </ul>}\r\n            {!isAdmin && (\r\n                <ul className=\"list-unstyled components\">\r\n                    <h5>USER TABS</h5>\r\n                <li>\r\n                    <NavLink to='userStats' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <FaChartBar className='icon' style={{color: 'darkgreen'}} />\r\n                            <div>Stats</div>\r\n                        </div>\r\n\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/userDashBoard' onClick={()=>{if(size<960) setShowSidebar(true)}}> \r\n                    <div className='d-flex align-items-center'>\r\n                     <FaTasks className='icon' style={{color: 'blueviolet'}} />\r\n                     <div>Your Tasks</div>\r\n                    </div>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/userTeamMembers' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <GiTeamIdea className='icon' style={{color: 'darkblue'}} />\r\n                            <div>Your Team</div>\r\n                        </div>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/assignedToYou' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <FaHandPointRight className='icon' style={{color: 'darkmagenta'}} />\r\n                            <div>Assigned To You</div>\r\n                        </div>\r\n\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to='/profile' onClick={()=>{if(size<960) setShowSidebar(true)}}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <CgProfile className='icon' style={{color: 'darkred'}} />\r\n                            <div>Profile</div>\r\n                        </div>\r\n\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n            )}\r\n\r\n        </nav>\r\n\r\n \r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport {useNavigate} from 'react-router-dom';\r\nimport image from '../images/hero1.jpg'\r\nimport './Home.css'\r\nconst Home = () => {\r\n const navigate = useNavigate();\r\n  return (\r\n   \r\n        <div className='content-container'>\r\n          <div className='desc-container'>\r\n            <div className='logoDiv'>\r\n              <h2 className='logo'><span className='logoSpan'>Easy</span> Tasking</h2>\r\n            </div>\r\n            <div className='heroDiv'>\r\n              <h1 className='hero'><span className='heroSpan'>Task</span> Managing <span className='heroSpan'>App</span></h1>\r\n            </div>\r\n            <div className='descriptionDiv'>\r\n              <p className='description'>\r\n               An excellent app for creating, updating and managing the tasks for your crew in a ship building environment. It can also be easily adopted as an issue tracker or note making app. Enjoy using it.\r\n              </p>\r\n            </div>\r\n            <div className='action'>\r\n              <button variant='contained' className='btn btn-secondary mt-3' onClick={()=>navigate('/auth')}>Login / Register</button>\r\n            </div>\r\n          </div>\r\n          <div className='imageContainer'>\r\n            <div >\r\n              <img  src= {image} alt='transmission' className='image'></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Home\r\n\r\n","import React from 'react'\r\nimport {FaExclamationTriangle} from 'react-icons/fa'\r\nimport {Link} from 'react-router-dom'\r\nconst NotFound = ({user}) => {\r\n  const checkAdmin = user?user.role:'';\r\n  const isAdmin = checkAdmin === 'authorizedAdmin'\r\n  return (\r\n    <div className='d-flex flex-column justify-content-center align-items-center mt-5'>\r\n     <FaExclamationTriangle className='text-danger' size='5em'/>\r\n      <h1>404</h1>\r\n      <p className='lead'>Sorry, this pge does not exist</p>\r\n      <Link to={isAdmin?'/adminDashboard':'userDashboard'}>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n      <span className=\"sr-only\"></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import { gql } from \"@apollo/client\";\r\n\r\n\r\nconst GET_TASKS = gql`\r\n query getTasks {\r\n  tasks {\r\n  id\r\n  creatorId\r\n  title\r\n  priority\r\n  status\r\n  system\r\n  createdAt\r\n  updatedAt\r\n  assignedTo{\r\n   name\r\n  }\r\n  }\r\n }\r\n`\r\nconst GET_TASK = gql`\r\nquery getTask($id: ID!){\r\n task(id: $id){\r\n  id\r\n  title \r\n  priority\r\n  status\r\n  system\r\n  description\r\n  workingHoursToComplete\r\n  fileSystem\r\n  fileName\r\n  creatorId\r\n  creator{\r\n   id\r\n   name\r\n   email\r\n   role\r\n  }\r\n  assignedTo{\r\n   id\r\n   name\r\n   email\r\n   phone \r\n   role\r\n  }\r\n  createdAt\r\n  updatedAt\r\n }\r\n}\r\n`\r\n\r\n\r\nexport {GET_TASKS, GET_TASK, };","import React from 'react'\r\nimport {FaEnvelope, FaPhone, FaIdBadge, } from 'react-icons/fa'\r\nimport {AiFillInteraction} from 'react-icons/ai'\r\n\r\nconst TeamMemberInfo = ({teamMember}) => {\r\n  return (\r\n    <>\r\n      <h5 className=\"mt-5\">Assigned To:</h5>\r\n      <ul className=\"list-group\">\r\n       <li className=\"list-group-item\">\r\n        <FaIdBadge className='icon'/>{teamMember?teamMember.name:''}\r\n       </li>\r\n       <li className=\"list-group-item\">\r\n        <FaEnvelope className='icon'/>{teamMember?teamMember.email:''}\r\n       </li>\r\n       <li className=\"list-group-item\">\r\n        <FaPhone className='icon'/>{teamMember?teamMember.phone:''}\r\n       </li>\r\n       <li className=\"list-group-item\">\r\n        <AiFillInteraction className='icon'/>{teamMember?teamMember.role:''}\r\n       </li>\r\n\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamMemberInfo\r\n","import React from 'react'\r\nimport {FaEnvelope, FaIdBadge, } from 'react-icons/fa'\r\nimport {AiFillInteraction} from 'react-icons/ai'\r\n\r\nconst TeamMemberInfo = ({creator}) => {\r\n  return (\r\n    <>\r\n      <h5 className=\"mt-5\">Created By:</h5>\r\n      <ul className=\"list-group\">\r\n       <li className=\"list-group-item\">\r\n        <FaIdBadge className='icon'/>{creator?creator.name:''}\r\n       </li>\r\n       <li className=\"list-group-item\">\r\n        <FaEnvelope className='icon'/>{creator?creator.email: ''}\r\n       </li>\r\n       <li className=\"list-group-item\">\r\n        <AiFillInteraction className='icon'/>{creator?creator.role: ''}\r\n       </li>\r\n\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamMemberInfo\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst ADD_TASK = gql`\r\nmutation addTask($creatorId: ID!, $teamMemberId: ID!, $title: String!, $description: String!, $status: String!, $priority: String!, $system: String!, $createdAt: String!, $workingHoursToComplete: String!, $fileSystem: String, $fileName: String){\r\n addTask(creatorId: $creatorId, teamMemberId: $teamMemberId, title: $title, description: $description, status: $status, priority: $priority, system: $system, createdAt: $createdAt, workingHoursToComplete: $workingHoursToComplete, fileSystem: $fileSystem, fileName: $fileName){\r\n   id\r\n   title\r\n   priority\r\n   status\r\n   system\r\n\r\n }\r\n}\r\n`\r\n\r\nconst DELETE_TASK = gql`\r\nmutation deleteTask($id: ID){\r\n deleteTask(id: $id){\r\n  id\r\n }\r\n}\r\n`\r\n\r\nconst UPDATE_TASK = gql`\r\nmutation updateTask($id: ID!, $teamMemberId: ID!, $title: String!, $description: String!, $status: String!, $priority: String!, $system: String!, $updatedAt: String!, $workingHoursToComplete: String!, $fileSystem: String, $fileName: String){\r\n updateTask(id: $id, teamMemberId: $teamMemberId, title: $title, description: $description, status: $status, priority: $priority, system: $system, updatedAt: $updatedAt, workingHoursToComplete: $workingHoursToComplete, fileSystem: $fileSystem, fileName: $fileName){\r\n   id\r\n   title\r\n   priority\r\n   status\r\n   system\r\n\r\n }\r\n}\r\n`\r\n\r\n\r\n\r\nexport {ADD_TASK, DELETE_TASK, UPDATE_TASK}","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport { GET_TASKS, GET_TASK } from '../queries/taskQueries'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { DELETE_TASK } from '../mutations/taskMutations'\r\n\r\nconst DeleteTaskButton = ({taskId, user,}) => {\r\n const navigate = useNavigate();\r\n const checkAdmin = user? user.role: '';\r\n const isAdmin =checkAdmin === 'authorizedAdmin'\r\n \r\n const{data}=useQuery(GET_TASK, {\r\n  variables:{id: taskId}\r\n })\r\n const [deleteTask] = useMutation(DELETE_TASK, {\r\n  variables: {id: taskId},\r\n  onCompleted: ()=> isAdmin? navigate('/adminDashboard'): navigate('/userDashboard'),\r\n  refetchQueries: [{query: GET_TASKS}]\r\n })\r\n\r\n const deleteTaskImage = async (file) =>{\r\n  try {\r\n    \r\n    if(!file) {return}\r\n    else{\r\n      await axios.delete(`http://localhost:4000/delete/${file}`)\r\n      \r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n }\r\n\r\n const handleDelete = () =>{\r\n  deleteTask(taskId)\r\n  deleteTaskImage(data.task.fileName)\r\n }\r\n  return (\r\n    <div className='d-flex mt-5 ms-auto'>\r\n     <button className=\"btn btn-danger m-2 d-flex gap-1 align-items-center\" onClick={handleDelete}>\r\n      <FaTrash className=''/>Delete Task\r\n     </button>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteTaskButton\r\n","import { gql } from \"@apollo/client\";\r\n\r\n\r\nconst GET_TEAM_MEMBERS = gql`\r\n query getTeamMembers {\r\n  teamMembers {\r\n   id\r\n   creatorId\r\n   name\r\n   email\r\n   phone\r\n   role\r\n  }\r\n }\r\n`;\r\n// const GET_USER_TEAM_MEMBERS = gql`\r\n//   query getUserTeamMembers($creatorId: ID!) {\r\n//     userTeamMembers(id: $creatorId) {\r\n//       id\r\n//       name\r\n//       email\r\n//       phone\r\n//       role\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport {GET_TEAM_MEMBERS, }","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {AiFillFileImage} from 'react-icons/ai'\r\n\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_TASK } from '../queries/taskQueries'\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries'\r\nimport { UPDATE_TASK } from '../mutations/taskMutations'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst EditTaskForm = ({task, }) => {\r\n  const [teamMemberId, setTeamMemberId] = useState('')\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  const [status, setStatus] = useState(task.status);\r\n  const [priority, setPriority] = useState(task.priority);\r\n  const [system, setSystem] = useState(task.system);\r\n  const [workingHoursToComplete, setWorkingHourToComplete] = useState(task.workingHoursToComplete);\r\n  const [updatedAt,] = useState(new Date().toISOString())\r\n  const[previousFileName, setPreviousFileName] = useState(task.fileName)\r\n  const [fileSystem, setFileSystem] = useState('')\r\n  const [fileName, setFileName] = useState('')\r\n  const [file, setFile] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\nconst {id} = useParams();\r\n\r\n\r\n\r\n   const {loading, error, data} = useQuery(GET_TEAM_MEMBERS);\r\n\r\n const teamMembers = data?data.teamMembers.filter(member=>member.creatorId===task.creatorId):[];\r\n\r\n   const[updateTask] = useMutation(UPDATE_TASK, {\r\n    variables:{\r\n    id: id, teamMemberId, title, description, status, system, priority, workingHoursToComplete, \r\n    updatedAt,fileSystem, fileName\r\n  },\r\n   refetchQueries: [{ query: GET_TASK, variables: { id: id } }],\r\n}\r\n \r\n )\r\n\r\n  async function postImage(image) {\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image)\r\n\r\n  const result = await axios.post('http://localhost:4000/upload', formData, { headers: {'Content-Type': 'multipart/form-data'}})\r\n  return result.data\r\n}\r\n\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    if(file){\r\n\r\n      setIsLoading(true)\r\n      const result = await postImage(file)\r\n      setFileSystem(result.location)\r\n      setFileName(result.name)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n\r\n const deleteTaskImage = async (file) =>{\r\n  try {\r\n    \r\n    if(!file) {return}\r\n    else{\r\n      const {data}= await axios.delete(`http://localhost:4000/delete/${file}`)\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(title === '' || description === '' || status === '' || priority === '' || system === '' || workingHoursToComplete === '' || teamMemberId ===''){\r\n      alert('Please fill in all fields')\r\n    }\r\n    if(fileSystem){\r\n\r\n      updateTask(id, teamMemberId, title, description, status, priority, system, workingHoursToComplete, updatedAt, fileSystem, fileName)\r\n      deleteTaskImage(previousFileName)\r\n    }else{\r\n      updateTask(id, teamMemberId, title, description, status, priority, system, workingHoursToComplete, updatedAt, )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && !error &&(<>\r\n        <div className='modal-body mt-5 paper' >\r\n                  <form>\r\n                  <div className='mb-3'>\r\n                  <label className='form-label'>Task Image (Optional)</label>\r\n                  <input\r\n                    type='file'\r\n                    className='form-control'\r\n                    id='file'\r\n                    \r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                  />\r\n                </div>\r\n                \r\n                <h4 className='mb-3'>{isLoading?'Uploading...': !isLoading&&fileSystem?<AiFillFileImage style={{fontSize: '50px', color: 'magenta'}}/>:''}</h4>\r\n                \r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-secondary mb-3'\r\n                 onClick={ uploadImage}>Upload</button>\r\n\r\n\r\n\r\n              </form>\r\n\r\n              <form onSubmit={handleSubmit}>\r\n                <h5>Edit Task</h5>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Title</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='title'\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Description</label>\r\n                  <textarea\r\n                    \r\n                    className='form-control'\r\n                    id='description'\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Projected Working Hours To Complete</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='workingHoursToComplete'\r\n                    value={workingHoursToComplete}\r\n                    onChange={(e) => setWorkingHourToComplete(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                <label htmlFor=\"Status\" className=\"form-label\">Status</label>\r\n                <select  id=\"status\" className=\"form-select\" value={status} onChange={(e)=>setStatus(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"Pending\">Pending</option>\r\n                 <option value=\"Completed\">Completed</option>\r\n                </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <label htmlFor=\"Priority\" className=\"form-label\">Priority</label>\r\n                <select  id=\"priority\" className=\"form-select\" value={priority} onChange={(e)=>setPriority(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"#1\">#1</option>\r\n                 <option value=\"#2\">#2</option>\r\n                 <option value=\"#3\">#3</option>\r\n                </select>\r\n               </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"Assigned To\" className=\"form-label\">Assigned To</label>\r\n                <select  id=\"teamMemberId\" className=\"form-select\"  onChange={(e)=>setTeamMemberId(e.target.value)}>\r\n                 <option value=''></option>\r\n                 {teamMembers.map(teamMember => {\r\n                  return <option key={teamMember.id} value={teamMember.id}>{teamMember.name}</option>\r\n                 })}\r\n                </select>\r\n               </div>\r\n\r\n               <div className=\"mb-3\">\r\n                <label htmlFor=\"System\" className=\"form-label\">System</label>\r\n                <select  id=\"system\" className=\"form-select p-2\" value={system} onChange={(e)=>setSystem(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"Normal Power\">Normal Power</option>\r\n                 <option value=\"Emergency Power\">Emergency Power</option>\r\n                 <option value=\"Normal Lighting\">Normal Lighting</option>\r\n                 <option value=\"Emergency Lighting\">Emergency Lighting</option>\r\n                 <option value=\"Generators\">Generators</option>\r\n                 <option value=\"Emergency Generator\">Emergency Generator</option>\r\n                 <option value=\"Switchboards\">Switchboards</option>\r\n                 <option value=\"Devices & Equipment\">Devices & Equipment</option>\r\n                 <option value=\"Cable Tray & Wireways\">Cable Tray & Wireways</option>\r\n                 <option value=\"Cable Pulling\">Cable Pulling</option>\r\n                 <option value=\"Cable Termination\">Cable Termination</option>\r\n                 <option value=\"Grounding & Bonding\">Grounding & Bonding</option>\r\n                 <option value=\"MCC & Motors\">MCCs, Motors And VFDs</option>\r\n                 <option value=\"Propulsion Motor and VFD\">Propulsion Motor and VFD</option>\r\n                 <option value=\"Steering And Navigation\">Steering And Navigation</option>\r\n                 <option value=\"HMCs\">HMCs</option>\r\n                 <option value=\"HPU And Hydraulics\">HPU And Hydraulics</option>\r\n                 <option value=\"Sensors\">Sensors</option>\r\n                 <option value=\"Fire Alarm\">Fire Alarm</option>\r\n                 <option value=\"HVAC\">HVAC</option>\r\n                 <option value=\"Antenna\">Antenna</option>\r\n                 <option value=\"De-Gaussing\">De-Gaussing</option>\r\n                </select>\r\n               </div>\r\n               \r\n\r\n\r\n\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-primary mt-4'\r\n                >\r\n                  Edit Task\r\n                </button>\r\n              </form>\r\n            </div>\r\n            </>\r\n      )\r\n\r\n          }\r\n          </>\r\n            )\r\n            \r\n\r\n  \r\n}\r\n\r\nexport default EditTaskForm\r\n","import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Spinner from '../components/Spinner'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_TASK } from '../queries/taskQueries'\r\nimport TeamMemberInfo from '../components/TeamMemberInfo'\r\nimport CreatorInfo from '../components/CreatorInfo'\r\nimport DeleteTaskButton from '../components/DeleteTaskButton'\r\nimport EditTaskForm from '../components/EditTaskForm'\r\n\r\nconst Task = ({user,}) => {\r\n const {id} = useParams();\r\n const{loading, error, data} = useQuery(GET_TASK, {\r\n  variables: {\r\n   id: id\r\n  }\r\n })\r\n if(loading) return <Spinner/>;\r\n if(error) return <h4>Something Went Wrong!</h4>\r\nconst checkAdmin = user? user.role: '';\r\nconst isAdmin = checkAdmin==='authorizedAdmin'\r\n  return (\r\n    <>\r\n      {!loading && !error && (\r\n       <div className=\"mx-auto w-75 card p-5\">\r\n        <Link to={isAdmin?'/adminDashboard':'/userDashboard'} className='btn btn-light btn-sm w-25 d-inline ms-auto mt-5'>Back</Link>\r\n        <h1>Title: </h1>\r\n        <h5>{data.task.title}</h5>\r\n        <h5 className=\"mt-5\">Description:</h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.description}</p>\r\n        <h5 className=\"mt-5\">Created At:</h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.createdAt}</p>\r\n        <h5 className=\"mt-5\">Updated At:</h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.updatedAt}</p>\r\n        <h5 className=\"mt-5\">Priority:</h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.priority}</p>\r\n        <h5 className=\"mt-3\">Project Status:</h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.status}</p>\r\n        <h5 className=\"mt-3\">System:\r\n        </h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.system}</p>\r\n        <h5 className=\"mt-3\">Working Hours To Complete:\r\n        </h5>\r\n        <p style={{fontWeight: '600', color: \"teal\"}}>{data.task.workingHoursToComplete} h</p>\r\n        <h5 className=\"mt-3\">Image\r\n        </h5>\r\n        <img src={data.task.fileSystem} alt={data.task.title} className='img-task'/>\r\n\r\n\r\n\r\n       <CreatorInfo creator={data.task.creator}/>\r\n       <TeamMemberInfo teamMember={data.task.assignedTo}/>\r\n       <EditTaskForm task={data.task} user={user}/>\r\n       <DeleteTaskButton task={data.task} taskId={data.task.id} user={user}/>\r\n       </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import { gql } from \"@apollo/client\";\r\n\r\nconst ADD_USER = gql`\r\nmutation addUser($name: String!, $email: String!, $password: String!, $role: String!, $fileSystem: String, $fileName: String){\r\n addUser(name: $name, email: $email, password: $password, role: $role, fileSystem: $fileSystem, fileName: $fileName){\r\n    id,\r\n    name,\r\n    email,   \r\n    role,\r\n    token,\r\n    tokenExpiration,\r\n    fileSystem,\r\n }\r\n}\r\n`\r\nconst DELETE_USER = gql`\r\nmutation deleteUser($id: ID!){\r\n   deleteUser(id: $id){\r\n      id\r\n      name\r\n   }\r\n}\r\n`\r\nconst UPDATE_USER = gql`\r\nmutation updateUser($id:ID!, $name: String!, $email: String!, $password: String!, $role: String!, $fileSystem: String, $fileName: String){\r\n   updateUser(id:$id, email: $email, name: $name, password: $password, role: $role, fileSystem: $fileSystem, fileName: $fileName){\r\n      id\r\n      name\r\n      email\r\n      role\r\n      fileSystem\r\n      }\r\n}\r\n`\r\n\r\n\r\nexport {ADD_USER, DELETE_USER, UPDATE_USER};","import {gql} from '@apollo/client';\r\n\r\nconst LOGIN = gql`\r\nmutation login($email: String!, $password: String!){\r\n login(email: $email, password: $password){\r\n  id\r\n  name\r\n  token\r\n  user{\r\n   role\r\n  }\r\n  tokenExpiration\r\n  fileSystem\r\n }\r\n}\r\n`\r\nexport {LOGIN};","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../mutations/user';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {LOGIN} from '../mutations/login'\r\nimport {AiFillFileImage} from 'react-icons/ai'\r\n\r\nconst Auth = ({user, setUser}) => {\r\n  const[name, setName] = useState('')\r\n  const[email, setEmail] = useState('');\r\n  const[password, setPassword]= useState('')\r\n  const[role, setRole] = useState('');\r\n  const[file, setFile] = useState('')\r\n  const[fileSystem, setFileSystem]=useState('')\r\n  const[fileName, setFileName]=useState('')\r\n  const[isLogin, setIsLogin] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [login, {error}] = useMutation(LOGIN, {\r\n    variables: { email, password},\r\n    async update(cache, { data: { login } }) {\r\n    localStorage.setItem('user', JSON.stringify(login))\r\n\r\n\r\n    try {\r\n      const result = await login;\r\n      if(result){\r\n        setUser(result);\r\n      }\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n    },\r\n \r\n  });\r\n\r\n\r\n\r\n  const [addUser] = useMutation(ADD_USER, {\r\n    variables: { name, email, password, role, fileSystem, fileName },\r\n   async update(cache, { data: { addUser } }) {\r\n     localStorage.setItem('user', JSON.stringify(addUser))\r\n    try {\r\n      const result = await addUser;\r\n      if(result.name){\r\n        setUser(result);\r\n      }else{\r\n        setErrorMessage('User already exists')\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n\r\n    },\r\n \r\n  });\r\n  \r\n\r\nif(user){\r\n  if(user.role === 'authorizedAdmin'){\r\n    navigate('/adminDashboard')\r\n  }else{\r\n    navigate('/userDashboard')\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  if(error && ! isLogin){\r\n\r\n    const timeout1 = setTimeout(()=>setErrorMessage('Wrong Credentials'),100);\r\n  \r\n    const timeout2 = setTimeout(()=>setErrorMessage(''), 2500);\r\n    return ()=> clearTimeout(timeout1, timeout2)\r\n  }\r\n}, [error, !isLogin])\r\n\r\nuseEffect(()=>{\r\n  if(errorMessage && isLogin){\r\n\r\n    const timeout1 = setTimeout(()=>setErrorMessage('User already exists'),100);\r\n  \r\n    const timeout2 = setTimeout(()=>setErrorMessage(''), 2000);\r\n    return ()=> clearTimeout(timeout1, timeout2)\r\n  }\r\n}, [errorMessage, isLogin])\r\n\r\n async function postImage(image) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image)\r\n\r\n  const result = await axios.post('http://localhost:4000/upload', formData, { headers: {'Content-Type': 'multipart/form-data'}})\r\n  return result.data\r\n}\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    const result = await postImage(file)\r\n    setFileSystem(result.location)\r\n    setFileName(result.name)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if ((name === '' || email === '' || password === '', role === '') && isLogin) {\r\n      return alert('Please fill in all fields');\r\n    }\r\n    if ((email === '' || password === '') && !isLogin) {\r\n      return alert('Please fill in all fields');\r\n    }\r\n    \r\n\r\n    if(isLogin&&fileSystem){\r\n    addUser(name, email, password, role, fileSystem, fileName);\r\n    }\r\n    if(isLogin&&!fileSystem){\r\n    addUser(name, email, password, role);\r\n    }\r\n\r\n\r\n\r\n    if(!isLogin){\r\n      \r\n      login(email, password);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setRole('');\r\n    setFileSystem('')\r\n    setFileName('')\r\n    setFile('')\r\n  };\r\n\r\n  const switchMode = () =>{\r\n    setIsLogin(!isLogin)\r\n    setErrorMessage('')\r\n  }\r\n\r\n  return (\r\n            <div className=\"auth-wrapper\">\r\n             <div className='container mt-5 col-md-5'>\r\n              <h3>{isLogin?'Register':'Login'}</h3>\r\n               {isLogin &&<form>\r\n                  <div className='mb-3'>\r\n                  <label className='form-label'>Avatar Image (Optional)</label>\r\n                  <input\r\n                    type='file'\r\n                    className='form-control'\r\n                    id='file'\r\n                    \r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                  />\r\n                </div>\r\n                \r\n                <h4 className='mb-3'>{loading?'Uploading...': !loading&&fileSystem?<AiFillFileImage style={{fontSize: '50px', color: 'magenta'}}/>:''}</h4>\r\n                \r\n                <button\r\n                  type='submit'\r\n                  data-bs-dismiss='modal'\r\n                  className='btn btn-secondary mb-3'\r\n                 onClick={ uploadImage}>Upload</button>\r\n\r\n\r\n\r\n              </form>}\r\n              <form onSubmit={onSubmit}>\r\n              \r\n\r\n               {errorMessage && !isLogin && <h3>{errorMessage}</h3>}\r\n               {errorMessage && isLogin && <h3>{errorMessage}</h3>}\r\n                {isLogin && <div className='mb-3'>\r\n                  <label className='form-label'>Name</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>}\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Email</label>\r\n                  <input\r\n                    type='email'\r\n                    className='form-control'\r\n                    id='email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Password</label>\r\n                  <input\r\n                    type='password'\r\n                    className='form-control'\r\n                    id='password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n\r\n\r\n\r\n                {isLogin && <div className='mb-3'>\r\n                  <label className='form-label'>Role</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='role'\r\n                    value={role}\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  />\r\n                </div>}\r\n\r\n\r\n                <button\r\n                  type='submit'\r\n                  data-bs-dismiss='modal'\r\n                  className='btn btn-secondary'\r\n                >\r\n                  {isLogin?'Register':'Login'}\r\n                </button>\r\n                \r\n                <button type='button'  className='switch-mode' onClick={switchMode}>{isLogin?'Already have an account? Login':\"Don't have an account? Register\"}</button>\r\n              </form>\r\n            </div>\r\n           </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React, {useState,} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {FaList} from 'react-icons/fa';\r\nimport {AiFillFileImage} from 'react-icons/ai'\r\n\r\nimport {useMutation, useQuery} from '@apollo/client'\r\n// import { ADD_TASK } from '../mutations/takMutations';\r\nimport { GET_TASKS } from '../queries/taskQueries';\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries';\r\nimport { ADD_TASK } from '../mutations/taskMutations';\r\nimport { GET_USER } from '../queries/user';\r\n\r\nconst AddTaskModal = ({user}) => {\r\n\r\n const [teamMemberId, setTeamMemberId] = useState('')\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [priority, setPriority] = useState('');\r\n  const [system, setSystem] = useState('');\r\n  const [workingHoursToComplete, setWorkingHourToComplete] = useState('');\r\n  const [createdAt, setCreatedAt] = useState(new Date().toISOString())\r\n  const [fileSystem, setFileSystem] = useState('')\r\n  const [fileName, setFileName] = useState('')\r\n  const [file, setFile] = useState('')\r\n  const [isLoading, setIsLoading] = useState('')\r\n\r\n\r\n const[addTask] = useMutation(ADD_TASK, {\r\n  variables:{\r\n    creatorId: user?user.id: '', teamMemberId, title, description, status, system, priority, workingHoursToComplete, \r\n    createdAt, fileSystem, fileName\r\n  },\r\n  \r\n  update(cache, {\r\n    data: addTask\r\n  },\r\n  \r\n ){\r\n  const {tasks} = cache.readQuery({query: GET_TASKS});\r\n  cache.writeQuery({\r\n    query: GET_TASKS,\r\n    data: {tasks: [...tasks, addTask]}\r\n  })\r\n},\r\nrefetchQueries: [{ query: GET_USER, variables: { id: user?user.id: '' }, }],\r\n })\r\n\r\n\r\n const {loading, error, data} = useQuery(GET_TEAM_MEMBERS)\r\n const userId = user? user.id: '';\r\nif(loading) return null\r\nif(error) return <h4>Something went Wrong</h4>\r\n\r\nlet teamMembers;\r\nconst checkAdmin = user?user.role: '';\r\nconst isAdmin = checkAdmin === 'authorizedAdmin'\r\nconst adminTeamMembers = data.teamMembers;\r\nconst userTeamMembers = data? data.teamMembers.filter(teamMember => teamMember.creatorId === userId): [];\r\nif(isAdmin){\r\n  teamMembers = adminTeamMembers\r\n}else{\r\n  teamMembers = userTeamMembers\r\n}\r\n\r\n async function postImage(image) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image)\r\n\r\n  const result = await axios.post('http://localhost:4000/upload', formData, { headers: {'Content-Type': 'multipart/form-data'}})\r\n  return result.data\r\n}\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true)\r\n    const result = await postImage(file)\r\n    setFileSystem(result.location)\r\n    setFileName(result.name)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if(title === '' || description === '' || status === '' || priority === '' || system === '' || workingHoursToComplete === ''|| teamMemberId ===''){\r\n      alert('Please fill in all fields')\r\n    }\r\n    if(fileSystem){\r\n     console.log(fileName);\r\n\r\n     addTask({creatorId: user?user.id: ''}, teamMemberId, title, description, status, priority, system, workingHoursToComplete, createdAt, fileSystem, fileName)\r\n   }else{\r\n      addTask({creatorId: user?user.id: ''}, teamMemberId, title, description, status, priority, system, workingHoursToComplete, createdAt,)\r\n\r\n   }\r\n\r\n    setTitle('')\r\n    setDescription('')\r\n    setStatus('')\r\n    setPriority('')\r\n    setSystem('')\r\n    setWorkingHourToComplete('')\r\n    setTeamMemberId('')\r\n    setCreatedAt('')\r\n    setFileSystem('')\r\n    setFileName('')\r\n    setFile('')\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n     <>\r\n     {!loading && !error &&(\r\n      <>\r\n    <button\r\n        type='button'\r\n        className='btn btn-primary'\r\n        data-bs-toggle='modal'\r\n        data-bs-target='#addTaskModal'\r\n      >\r\n    <div className='d-flex align-items-center'>\r\n          <FaList className='icon' />\r\n          <div>Add Task</div>\r\n        </div>\r\n      </button>\r\n\r\n      <div\r\n        className='modal fade'\r\n        id='addTaskModal'\r\n        aria-labelledby='addTaskModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header d-flex flex-column'>\r\n              <h5 className='modal-title  d-block w-100' id='addTaskModalLabel'>\r\n                Add New Task\r\n              </h5>\r\n\r\n              <button\r\n                type='button'\r\n                className='btn-close'\r\n                data-bs-dismiss='modal'\r\n                aria-label='Close'\r\n              ></button>\r\n            </div>\r\n            <div className='modal-body'>\r\n                <div className='mb-3 mt-3 d-block'>                    \r\n                  <label className='form-label'>Upload Image (Optional)</label>\r\n                  <input\r\n                    type='file'\r\n                    className='form-control'\r\n                    id='file'\r\n                    \r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                  />\r\n                </div>\r\n                \r\n                <h4 className='mb-3'>{isLoading?'Uploading...': !isLoading&&fileSystem?<AiFillFileImage style={{fontSize: '50px', color: 'magenta'}}/>:''}</h4>\r\n                \r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-secondary mb-3'\r\n                 onClick={ uploadImage}>Upload</button>\r\n\r\n\r\n              <form onSubmit={handleSubmit}>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Title</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='title'\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Description</label>\r\n                  <textarea\r\n                    \r\n                    className='form-control'\r\n                    id='description'\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Projected Working Hours To Complete</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='workingHoursToComplete'\r\n                    value={workingHoursToComplete}\r\n                    onChange={(e) => setWorkingHourToComplete(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                <label htmlFor=\"Status\" className=\"form-label\">Status</label>\r\n                <select  id=\"status\" className=\"form-select\" value={status} onChange={(e)=>setStatus(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"Pending\">Pending</option>\r\n                 <option value=\"Completed\">Completed</option>\r\n                </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <label htmlFor=\"Priority\" className=\"form-label\">Priority</label>\r\n                <select  id=\"priority\" className=\"form-select\" value={priority} onChange={(e)=>setPriority(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"#1\">#1</option>\r\n                 <option value=\"#2\">#2</option>\r\n                 <option value=\"#3\">#3</option>\r\n                </select>\r\n               </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"Assigned To\" className=\"form-label\">Assigned To</label>\r\n                <select  id=\"teamMemberId\" className=\"form-select\"  onChange={(e)=>setTeamMemberId(e.target.value)}>\r\n                 <option value=''></option>\r\n                 {teamMembers.map(teamMember => {\r\n                  return <option key={teamMember.id} value={teamMember.id}>{teamMember.name}</option>\r\n                 })}\r\n                </select>\r\n               </div>\r\n\r\n               <div className=\"mb-3\">\r\n                <label htmlFor=\"System\" className=\"form-label\">System</label>\r\n                <select  id=\"system\" className=\"form-select p-2\" value={system} onChange={(e)=>setSystem(e.target.value)}>\r\n                 <option value=\"\"></option>\r\n                 <option value=\"Normal Power\">Normal Power</option>\r\n                 <option value=\"Emergency Power\">Emergency Power</option>\r\n                 <option value=\"Normal Lighting\">Normal Lighting</option>\r\n                 <option value=\"Emergency Lighting\">Emergency Lighting</option>\r\n                 <option value=\"Generators\">Generators</option>\r\n                 <option value=\"Emergency Generator\">Emergency Generator</option>\r\n                 <option value=\"Switchboards\">Switchboards</option>\r\n                 <option value=\"Devices & Equipment\">Devices & Equipment</option>\r\n                 <option value=\"Cable Tray & Wireways\">Cable Tray & Wireways</option>\r\n                 <option value=\"Cable Pulling\">Cable Pulling</option>\r\n                 <option value=\"Cable Termination\">Cable Termination</option>\r\n                 <option value=\"Grounding & Bonding\">Grounding & Bonding</option>\r\n                 <option value=\"MCC & Motors\">MCCs, Motors And VFDs</option>\r\n                 <option value=\"Propulsion Motor & VFD\">Propulsion Motor and VFD</option>\r\n                 <option value=\"Steering & Navigation\">Steering And Navigation</option>\r\n                 <option value=\"HMCs\">HMCs</option>\r\n                 <option value=\"HPU & Hydraulics\">HPU And Hydraulics</option>\r\n                 <option value=\"Sensors\">Sensors</option>\r\n                 <option value=\"Fire Alarm\">Fire Alarm</option>\r\n                 <option value=\"HVAC\">HVAC</option>\r\n                 <option value=\"Antenna\">Antenna</option>\r\n                 <option value=\"De-Gaussing\">De-Gaussing</option>\r\n                </select>\r\n               </div>\r\n\r\n\r\n                <button\r\n                  type='submit'\r\n                  data-bs-dismiss='modal'\r\n                  className='btn btn-primary mt-4'\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      </>\r\n     )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddTaskModal\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TaskCard = ({task,}) => {\r\n  return (\r\n    <div className='col-md-3'>\r\n      <div className=\"card mb-3 p-2 shadow-sm rounded\" >\r\n       <div className=\"d-flex justify-content-between gap-5 align-items-center \" >\r\n        <h5 className='card-title' style={{color: 'rgb(4, 4, 43)'}}>Title: </h5>\r\n        <p className='card-title' style={{color: 'rgb(43, 124, 175)'}}>{task.title}</p>\r\n       </div>\r\n       <div className=\"d-flex justify-content-between gap-5 align-items-center\">\r\n        <h5 className='card-title' style={{color: 'darkred'}}>Priority:</h5>\r\n        <p className='card-title' style={{color: 'magenta'}}>{task.priority}</p>\r\n       </div>\r\n        <div className=\"d-flex justify-content-between gap-5 align-items-center\">\r\n        <h5 className='card-title' style={{color: 'purple'}}>Status: </h5>\r\n        <p className='card-title ' style={{color: 'red'}}>{task.status}</p>\r\n       </div>\r\n       <div className=\"d-flex justify-content-between  gap-5 align-items-center\">\r\n        <p className='card-title' style={{color: 'blue'}}>System: </p>\r\n        <p className='card-title ' style={{color: 'black', fontSize: '14px'}}>{task.system}</p>\r\n       </div>\r\n\r\n       <hr />\r\n\r\n        <Link className='btn btn-light ' to ={`/tasks/${task.id}`}>View Task</Link>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard\r\n","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\nimport {Chart as ChartJS} from 'chart.js/auto'\r\n\r\nconst BarChart = ({chartData}) => {\r\n  return (\r\n  <div style={{width: 400, margin: '1rem auto', }}>\r\n   <Bar data={chartData} style={{color: 'black', fontWeight: 'bold', fontSize: '1rem'}}/>\r\n\r\n  </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BarChart\r\n","import React, {useState} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_TASKS } from '../queries/taskQueries'\r\nimport Spinner from './Spinner'\r\nimport TaskCard from './TaskCard'\r\nimport ReactPaginate from 'react-paginate'\r\nimport BarChart from './BarChart'\r\n\r\nconst Tasks = () => {\r\n const[pageNumber, setPageNumber]=useState(0)\r\n\r\n const {loading, error, data} = useQuery(GET_TASKS)\r\n\r\n  const tasks = data? data.tasks: [];\r\n  \r\n const tasksPerPage = 8;\r\n const pagesVisited = pageNumber * tasksPerPage;\r\n const pageCount = Math.ceil(tasks.length/tasksPerPage)\r\n \r\n const displayTasks = tasks.slice(pagesVisited, pagesVisited + tasksPerPage)\r\n\r\n const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  \r\n }\r\nconst pendingPriorityOne = tasks.filter(task=>task.priority ==='#1' && task.status === 'Pending').length\r\n const pendingPriorityTwo = tasks.filter(task=>task.priority ==='#2' && task.status === 'Pending').length\r\n const pendingPriorityThree = tasks.filter(task=>task.priority ==='#3' && task.status === 'Pending').length\r\n\r\n const completedPriorityOne = tasks.filter(task=>task.priority ==='#1' && task.status === 'Completed').length\r\n const completedPriorityTwo = tasks.filter(task=>task.priority ==='#2' && task.status === 'Completed').length\r\n const completedPriorityThree = tasks.filter(task=>task.priority ==='#3' && task.status === 'Completed').length\r\n\r\n\r\n if(loading) return <Spinner/>\r\n if(error) return <h4>Something Went Wrong!</h4>\r\n  return (\r\n    <>\r\n      {data.tasks.length>0?(<div className='row mt-4'>\r\n        <div className=\"container d-flex justify-content-center mb-4 text-danger\">\r\n          <h3>All Tasks</h3>\r\n        </div>\r\n       {displayTasks.map(task=>{\r\n        return <TaskCard key={task.id} task={task}/>\r\n       })}\r\n        <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n\r\n      </div>): (<h4>No Tasks To Display</h4>)}\r\n      <div className='d-flex justify-content-center align-items-center'>\r\n        <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Pending Tasks',data:[pendingPriorityOne,pendingPriorityTwo, pendingPriorityThree],\r\n          backgroundColor:[\"cyan\",]\r\n        }],\r\n        \r\n      }}/>\r\n        <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Completed Tasks',\r\n          data:[completedPriorityOne,completedPriorityTwo, completedPriorityThree],\r\n          backgroundColor:[\"green\",]\r\n        }],\r\n        \r\n      }}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport AddTaskModal from '../components/AddTaskModal' \r\nimport Tasks from '../components/Tasks'\r\n\r\nconst AdminDashboard = ({user, }) => {\r\n  // if(!user) return <h5>Please Login Or Register To Manage Your Tasks</h5>\r\n  return (\r\n     <>\r\n      <div className='d-flex gap-3 mb-6'>\r\n        <AddTaskModal user={user} />\r\n      </div>\r\n      <div className=\"mt-4\">\r\n      <Tasks user={user}/>\r\n      <hr className='mb-4'/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","import React, {useState} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport Spinner from './Spinner'\r\nimport TaskCard from './TaskCard'\r\nimport { GET_TASKS } from '../queries/taskQueries'\r\nimport ReactPaginate from 'react-paginate';\r\nimport BarChart from './BarChart'\r\nconst UserTasks = ({user,}) => {\r\nconst[pageNumber, setPageNumber]=useState(0)\r\n// const[userChartData, setUserChartData] = useState()\r\n\r\n\r\nconst {loading, error, data} = useQuery(GET_TASKS);\r\n if(loading) return <Spinner/>\r\n if(error) return <h4>Something went wrong</h4>\r\n\r\n const tasks = data? data.tasks: [];\r\n const userId = user?user.id: '';\r\n  \r\n const userTasks = tasks.filter((task) => task.creatorId === userId);\r\n const tasksPerPage = 8;\r\n const pagesVisited = pageNumber * tasksPerPage;\r\n const pageCount = Math.ceil(userTasks.length/tasksPerPage)\r\n \r\n const displayTasks = userTasks.slice(pagesVisited, pagesVisited + tasksPerPage)\r\n\r\n const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  \r\n }\r\n\r\n const pendingPriorityOne = userTasks.filter(task=>task.priority ==='#1' && task.status === 'Pending').length\r\n const pendingPriorityTwo = userTasks.filter(task=>task.priority ==='#2' && task.status === 'Pending').length\r\n const pendingPriorityThree = userTasks.filter(task=>task.priority ==='#3' && task.status === 'Pending').length\r\n\r\n\r\n const completedPriorityOne = userTasks.filter(task=>task.priority ==='#1' && task.status === 'Completed').length\r\n const completedPriorityTwo = userTasks.filter(task=>task.priority ==='#2' && task.status === 'Completed').length\r\n const completedPriorityThree = userTasks.filter(task=>task.priority ==='#3' && task.status === 'Completed').length\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n    <div className=\"d-flex justify-content-center\">\r\n          <h3 className='text-danger '>Your Tasks</h3>\r\n    </div>\r\n      {userTasks.length>0?(<div className='row mt-4'>\r\n        <div className=\"container d-flex justify-content-center mb-4 text-danger\">\r\n        </div>\r\n       {displayTasks.map(task=>{\r\n        return <TaskCard key={task.id} task={task}/>\r\n       })}\r\n      </div>): (<h4>No Tasks To Display</h4>)}\r\n        <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n         <div className='d-flex justify-content-center align-items-center'>\r\n        <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Pending Tasks',data:[pendingPriorityOne,pendingPriorityTwo, pendingPriorityThree],\r\n          backgroundColor:[\"cyan\",]\r\n        }],\r\n        \r\n      }}/>\r\n              <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Completed Tasks',\r\n          data:[completedPriorityOne,completedPriorityTwo, completedPriorityThree],\r\n          backgroundColor:[\"green\",]\r\n        }],\r\n        \r\n      }}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserTasks\r\n","import React from 'react'\r\n// import AddTeamMemberModal from '../components/AddTeamMemberModal'\r\nimport AddTaskModal from '../components/AddTaskModal' \r\n// import UserTeamMembers from './UserTeamMembers'\r\nimport UserTasks from '../components/UserTasks'\r\n\r\nconst UserDashboard = ({user,}) => {\r\n  return (\r\n     <>\r\n      <div className='d-flex gap-3 mb-6'>\r\n      <AddTaskModal user={user} />\r\n      </div>\r\n      <div className=\"mt-4\">\r\n      <UserTasks user={user}/>\r\n      <hr className='mb-4'/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDashboard\r\n","import {gql} from \"@apollo/client\";\r\n\r\nconst ADD_TEAM_MEMBER = gql`\r\nmutation addTeamMember($creatorId: ID!, $name: String!, $email: String!, $phone: String!, $role: String!,) {\r\n  addTeamMember(creatorId: $creatorId, name: $name, email: $email, phone: $phone, role: $role, ){\r\n    id,\r\n    name,\r\n    email,\r\n    phone,\r\n    role,\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst DELETE_TEAM_MEMBER = gql`\r\n  mutation deleteTeamMember($id: ID!) {\r\n    deleteTeamMember(id: $id) {\r\n      id\r\n      name\r\n      email\r\n      phone\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {DELETE_TEAM_MEMBER, ADD_TEAM_MEMBER};","import React from 'react'\r\nimport {FaTrash} from \"react-icons/fa\"\r\nimport {DELETE_TEAM_MEMBER} from '../mutations/teamMemberMutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries';\r\nimport { GET_USER } from '../queries/user';\r\n\r\nconst TeamMemberRow = ({teamMember, user}) => {\r\n  const [deleteTeamMember] = useMutation(DELETE_TEAM_MEMBER, {\r\n    variables: {id: teamMember.id},\r\n    // refetchQueries: [{query: GET_TEAM_MEMBERS}]\r\n    update(cache, {data: { deleteTeamMember}}) {\r\n      const {teamMembers} = cache.readQuery({query: GET_TEAM_MEMBERS});\r\n      cache.writeQuery({\r\n        query: GET_TEAM_MEMBERS,\r\n        data: {teamMembers: teamMembers.filter(teamMember => teamMember.id!== deleteTeamMember.id)}\r\n      })\r\n    },\r\n    refetchQueries: [{ query: GET_USER, variables: { id: user?user.id: '' } }],\r\n  })\r\n  \r\n  return (\r\n    <tr>\r\n      <td>{teamMember.name}</td>\r\n      <td>{teamMember.email}</td>\r\n      <td>{teamMember.phone}</td>\r\n      <td>{teamMember.role}</td>\r\n      <td>\r\n       <button className='btn btn-danger btn-sm' onClick={deleteTeamMember}>\r\n        <FaTrash/>\r\n       </button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TeamMemberRow\r\n","import React, {useState} from 'react';\r\n\r\nimport {FaUser} from 'react-icons/fa';\r\nimport { useMutation} from '@apollo/client'\r\nimport { ADD_TEAM_MEMBER } from '../mutations/teamMemberMutations';\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries';\r\n\r\nconst AddTeamMemberModal = ({user}) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [role, setRole] = useState('');\r\n  \r\n\r\n\r\n\r\nconst [addTeamMember] = useMutation(ADD_TEAM_MEMBER, {\r\n    variables: { creatorId: user?user.id: '', name, email, phone, role,},\r\n    update(cache, { data: { addTeamMember } }) {\r\n      const { teamMembers } = cache.readQuery({ query: GET_TEAM_MEMBERS });\r\n      cache.writeQuery({\r\n        query: GET_TEAM_MEMBERS,\r\n        data: { teamMembers: [...teamMembers, addTeamMember] }\r\n      });\r\n    },\r\n\r\n  });\r\n\r\n\r\nconst onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === '' || email === '' || phone === '' || role === '') {\r\n      return alert('Please fill in all fields');\r\n    }\r\n\r\n    addTeamMember({creatorId: user?user.id: ''}, name, email, phone, role, );\r\n    setName('');\r\n    setEmail('');\r\n    setPhone('');\r\n    setRole('');\r\n  };\r\n\r\n\r\n  return (\r\n     <>\r\n      <button\r\n        type='button'\r\n        className='btn btn-secondary'\r\n        data-bs-toggle='modal'\r\n        data-bs-target='#addMemberModal'\r\n      >\r\n        <div className='d-flex align-items-center'>\r\n          <FaUser className='icon' />\r\n          <div>Add Member</div>\r\n        </div>\r\n      </button>\r\n\r\n      <div\r\n        className='modal fade'\r\n        id='addMemberModal'\r\n        aria-labelledby='addMemberModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='addMemberModalLabel'>\r\n                Add Member\r\n              </h5>\r\n              <button\r\n                type='button'\r\n                className='btn-close'\r\n                data-bs-dismiss='modal'\r\n                aria-label='Close'\r\n              ></button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              <form onSubmit={onSubmit}>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Name</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Email</label>\r\n                  <input\r\n                    type='email'\r\n                    className='form-control'\r\n                    id='email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Role</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='role'\r\n                    value={role}\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Phone</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='phone'\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <button\r\n                  type='submit'\r\n                  data-bs-dismiss='modal'\r\n                  className='btn btn-secondary'\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddTeamMemberModal\r\n","import React, {useState} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport TeamMemberRow from '../components/TeamMemberRow'\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries'\r\nimport Spinner from '../components/Spinner'\r\nimport AddTeamMemberModal from '../components/AddTeamMemberModal'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst TeamMembers = ({user}) => {\r\n  const[pageNumber, setPageNumber]=useState(0)\r\n\r\n const {loading, error, data} = useQuery(GET_TEAM_MEMBERS)\r\n const teamMembers= data?data.teamMembers:[]\r\n  const teamMembersPerPage = 8;\r\n const pagesVisited = pageNumber * teamMembersPerPage;\r\n const pageCount = teamMembers?Math.ceil(teamMembers.length/teamMembersPerPage):0;\r\n \r\n const displayTeamMembers = teamMembers?teamMembers.slice(pagesVisited, pagesVisited + teamMembersPerPage):[];\r\n\r\n  const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  \r\n }\r\n\r\n\r\n if(loading) return <Spinner/>\r\n if(error) return <h3>Something Went Wrong!</h3>\r\n\r\n  return (\r\n    <>\r\n    <AddTeamMemberModal user={user}/>\r\n            <div className=\"container d-flex justify-content-center mb-4 text-primary mt-4\">\r\n          <h3>All Team Members</h3>\r\n        </div>\r\n\r\n     {!loading && !error && (\r\n        <table className='table table-hover mt-3'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Role</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayTeamMembers.map((teamMember) => {\r\n              return <TeamMemberRow key={teamMember.id} teamMember={teamMember} />\r\n            }\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n         <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n\r\n      <button className='btn bt-secondary'><Link to='/adminDashboard'>Back To Tasks</Link></button>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamMembers\r\n","import React, {useState,} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport TeamMemberRow from '../components/TeamMemberRow'\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries'\r\nimport AddTeamMemberModal from '../components/AddTeamMemberModal'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserTeamMembers = ({user}) => {\r\nconst[pageNumber, setPageNumber]=useState(0)\r\n\r\n const {loading, error, data} = useQuery(GET_TEAM_MEMBERS);\r\n const userId = user? user.id: '';\r\n const userTeamMembers = data? data.teamMembers.filter(teamMember => teamMember.creatorId === userId): null;\r\n\r\n const teamMembersPerPage = 8;\r\n const pagesVisited = pageNumber * teamMembersPerPage;\r\n const pageCount = userTeamMembers?Math.ceil(userTeamMembers.length/teamMembersPerPage):0;\r\n \r\n const displayUserTeamMembers = userTeamMembers?userTeamMembers.slice(pagesVisited, pagesVisited + teamMembersPerPage):[];\r\n\r\n const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  \r\n }\r\n\r\n \r\n if(loading) return null\r\n\r\n if(error) return <h4>Something went wrong</h4>\r\n  return (\r\n    <>\r\n    <AddTeamMemberModal user={user}/>\r\n            <div className=\"container d-flex justify-content-center mb-4 text-primary mt-4\">\r\n          <h3>Your Team Members</h3>\r\n        </div>\r\n\r\n     {userTeamMembers.length?(\r\n        <table className='table table-hover mt-3'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Role</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayUserTeamMembers.map((teamMember) => {\r\n              return <TeamMemberRow key={teamMember.id} teamMember={teamMember} user={user}/>\r\n            }\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        \r\n      ):(<h4>No Members To Display</h4>)}\r\n        <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n      <button className='btn bt-secondary'><Link to='/userDashboard'>Back To Tasks</Link></button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserTeamMembers\r\n","import React from 'react'\r\nimport {FaTrash} from \"react-icons/fa\"\r\nimport {DELETE_USER} from '../mutations/user';\r\nimport { useMutation } from '@apollo/client';\r\nimport { FETCH_USERS } from '../queries/user';\r\n\r\nconst UserRow = ({user}) => {\r\n  const [deleteUser] = useMutation(DELETE_USER, {\r\n    variables: {id: user.id},\r\n    // refetchQueries: [{query: GET_TEAM_MEMBERS}]\r\n    update(cache, {data: { deleteUser}}) {\r\n      const {users} = cache.readQuery({query: FETCH_USERS});\r\n      cache.writeQuery({\r\n        query: FETCH_USERS,\r\n        data: {users: users.filter(user => user.id!== deleteUser.id)}\r\n      })\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <tr>\r\n      <td>{user.name}</td>\r\n      <td>{user.email}</td>\r\n      <td>{user.role}</td>\r\n      <td>\r\n       <button className='btn btn-danger btn-sm' onClick={deleteUser}>\r\n        <FaTrash/>\r\n       </button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default UserRow\r\n","import React, {useState} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport {FETCH_USERS} from '../queries/user'\r\nimport Spinner from './Spinner'\r\nimport UserRow from './UserRow'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AllUsers = () => {\r\n const[pageNumber, setPageNumber]=useState(0)\r\n\r\n const {loading, error, data} = useQuery(FETCH_USERS)\r\n\r\n\r\n if(loading) return <Spinner/>\r\n if(error) return <h3>Something Went Wrong!</h3>\r\n\r\n  const users= data?data.users:[]\r\n  const usersPerPage = 8;\r\n const pagesVisited = pageNumber * usersPerPage;\r\n const pageCount = users?Math.ceil(users.length/usersPerPage):0;\r\n \r\n const displayUsers = users?users.slice(pagesVisited, pagesVisited + usersPerPage):[];\r\n  const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n     {!loading && !error && (\r\n        <table className='table table-hover mt-3'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Role</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayUsers.map((user) => {\r\n              return <UserRow key={user.id} user={user} />\r\n            }\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n        <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n        <button className='btn bt-secondary'><Link to='/adminDashboard'>Back To Tasks</Link></button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllUsers\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {MdOutlineStopScreenShare} from 'react-icons/md'\r\nconst Unauthorized = () => {\r\n  return (\r\n    <div>\r\n      <div className='d-flex flex-column justify-content-center align-items-center mt-5'>\r\n     <MdOutlineStopScreenShare className='text-danger' size='5em'/>\r\n      <h1>404</h1>\r\n      <p className='lead'>Access Denied!</p>\r\n      <Link to='/userDashboard'>Go Back</Link>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Unauthorized\r\n","import React, {useState} from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport Spinner from '../components/Spinner'\r\nimport TaskCard from '../components/TaskCard'\r\nimport { GET_TASKS } from '../queries/taskQueries'\r\nimport ReactPaginate from 'react-paginate';\r\nimport BarChart from '../components/BarChart'\r\n\r\n\r\nconst AssignedToYou = ({user,}) => {\r\nconst[pageNumber, setPageNumber]=useState(0)\r\n\r\nconst {loading, error, data} = useQuery(GET_TASKS);\r\n if(loading) return <Spinner/>\r\n if(error) return <h4>Something went wrong</h4>\r\n const tasks = data? data.tasks: [];\r\n const responsible = tasks.map(task=>{return {...task, name: task.assignedTo?task.assignedTo.name:''}})\r\nconst userName = user?user.name:'';\r\n\r\n const userTasks = responsible.filter((task) => task.name === userName);\r\n const tasksPerPage = 8;\r\n const pagesVisited = pageNumber * tasksPerPage;\r\n const pageCount = Math.ceil(userTasks.length/tasksPerPage)\r\n \r\n const displayTasks = userTasks.slice(pagesVisited, pagesVisited + tasksPerPage)\r\n\r\n const changePage = ({selected}) => {\r\n  setPageNumber(selected)\r\n  \r\n }\r\n\r\n const pendingPriorityOne = userTasks.filter(task=>task.priority ==='#1' && task.status === 'Pending').length\r\n const pendingPriorityTwo = userTasks.filter(task=>task.priority ==='#2' && task.status === 'Pending').length\r\n const pendingPriorityThree = userTasks.filter(task=>task.priority ==='#3' && task.status === 'Pending').length\r\n\r\n\r\n const completedPriorityOne = userTasks.filter(task=>task.priority ==='#1' && task.status === 'Completed').length\r\n const completedPriorityTwo = userTasks.filter(task=>task.priority ==='#2' && task.status === 'Completed').length\r\n const completedPriorityThree = userTasks.filter(task=>task.priority ==='#3' && task.status === 'Completed').length\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n    <div className=\"d-flex justify-content-center\">\r\n          <h3 className='text-danger '>Your Tasks</h3>\r\n    </div>\r\n      {userTasks.length>0?(<div className='row mt-4'>\r\n        <div className=\"container d-flex justify-content-center mb-4 text-danger\">\r\n        </div>\r\n       {displayTasks.map(task=>{\r\n        return <TaskCard key={task.id} task={task}/>\r\n       })}\r\n      </div>): (<h4>No Tasks To Display</h4>)}\r\n        <ReactPaginate\r\n         previousLabel = \"Prev\"\r\n         nextLabel = \"Next\"\r\n         pageCount={pageCount}\r\n         onPageChange={changePage}\r\n         containerClassName= {'paginationButtons'}\r\n         previousLinkClassName={'previous'}\r\n         nextLinkClassName={'next'}\r\n         activeClassName={'active'}\r\n         />\r\n         <div className='d-flex justify-content-center align-items-center'>\r\n        <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Pending Tasks',data:[pendingPriorityOne,pendingPriorityTwo, pendingPriorityThree],\r\n          backgroundColor:[\"cyan\",]\r\n        }],\r\n        \r\n      }}/>\r\n              <BarChart chartData={{labels: ['Priority #1', 'Priority #2', 'Priority #3'],\r\n        datasets:[{ \r\n          label: 'Completed Tasks',\r\n          data:[completedPriorityOne,completedPriorityTwo, completedPriorityThree],\r\n          backgroundColor:[\"green\",]\r\n        }],\r\n        \r\n      }}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AssignedToYou\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { DELETE_USER } from '../mutations/user'\r\nimport {GET_USER} from '../queries/user'\r\nimport { LOGOUT } from '../mutations/logout'\r\nimport axios from 'axios'\r\n\r\nconst DeleteUserButton = ({id, user, setUser}) => {\r\n const navigate = useNavigate();\r\n const {data} = useQuery(GET_USER, {\r\n  variables:{\r\n    id: id\r\n  }\r\n })\r\n const [deleteUser] = useMutation(DELETE_USER, {\r\n  variables: {id: id},\r\n  onCompleted: ()=> navigate('/'),\r\n })\r\n  const [logout] = useMutation(LOGOUT, {\r\n   variables:{id: id},\r\n   \r\n  })\r\n  \r\n const deleteUserImage = async (file) =>{\r\n  try {\r\n    \r\n    if(!file) {return}\r\n    else{\r\n      const {data}= await axios.delete(`http://localhost:4000/delete/${file}`)\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n }\r\n  \r\n  const handleDelete = () => {\r\n    localStorage.clear();\r\n    logout(id);\r\n    deleteUser(id);\r\n    deleteUserImage(data.user.fileName);\r\n    setUser(null);\r\n    navigate('/');\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex mt-5 ms-auto'>\r\n     <button className=\"btn btn-danger m-2 d-flex gap-1 align-items-center\" onClick={handleDelete}>\r\n      <FaTrash className=''/>Unsubscribe\r\n     </button>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteUserButton\r\n","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useMutation } from '@apollo/client';\r\nimport { UPDATE_USER } from '../mutations/user';\r\nimport {AiFillFileImage} from 'react-icons/ai'\r\nimport { GET_USER } from '../queries/user';\r\n\r\nconst EditProfileForm = ({user, setUser}) => {\r\n  const[name, setName] = useState(user?user.name:'')\r\n  const[email, setEmail] = useState(user?user.email:'');\r\n  const[password, setPassword]= useState('')\r\n  const[role, setRole] = useState(user?user.role:'');\r\n  const[file, setFile] = useState('')\r\n  const[fileSystem, setFileSystem]=useState('')\r\n  const[fileName, setFileName]=useState('')\r\n  const[previousFileName, setPreviousFileName]=useState(user?user.fileName:'')\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\nconst id = user?user.id:'';\r\n  const [updateUser] = useMutation(UPDATE_USER, {\r\n    variables: {id, name, email, password, role, fileSystem, fileName },\r\n   async update(cache, { data: { updateUser } }) {\r\n     localStorage.setItem('registerUser', JSON.stringify(updateUser))\r\n     localStorage.setItem('loginUser', JSON.stringify(updateUser))\r\n    try {\r\n      const result = await updateUser;\r\n      if(result.name){\r\n        setUser(result);\r\n      }else{\r\n        setErrorMessage('User already exists')\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n\r\n    },\r\n  refetchQueries: [{ query: GET_USER, variables: { id: id } }],\r\n  });\r\n  \r\n const deleteUserImage = async (file) =>{\r\n  try {\r\n    \r\n    if(!file) {return}\r\n    else{\r\n      const {data}= await axios.delete(`http://localhost:4000/delete/${file}`)\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n }\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n  if(errorMessage){\r\n\r\n    const timeout1 = setTimeout(()=>setErrorMessage('User already exists'),100);\r\n  \r\n    const timeout2 = setTimeout(()=>setErrorMessage(''), 2000);\r\n    return ()=> clearTimeout(timeout1, timeout2)\r\n  }\r\n}, [errorMessage,])\r\n\r\n async function postImage(image) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image)\r\n\r\n  const result = await axios.post('http://localhost:4000/upload', formData, { headers: {'Content-Type': 'multipart/form-data'}})\r\n  return result.data\r\n}\r\n\r\n  const uploadImage = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n    const result = await postImage(file)\r\n    setFileSystem(result.location)\r\n    setFileName(result.name)\r\n    setLoading(false)\r\n  }\r\n  \r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (name === '' || email === '' || password === '' || role === '')  {\r\n      return alert('Please fill in all fields');\r\n    }\r\n    \r\n\r\n   if(fileSystem){\r\n     updateUser(id,name, email, password, role, fileSystem, fileName);\r\n     deleteUserImage(previousFileName)\r\n   }else{\r\n    updateUser(id,name, email, password, role);\r\n   }\r\n   \r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setRole('');\r\n    setFileSystem('')\r\n    setFileName('')\r\n    setFile('')\r\n    setPreviousFileName('')\r\n\r\n  };\r\n\r\n  return (\r\n            <div >\r\n             <div className='container mt-5 col-md-5'>\r\n              <h3>Update Profile</h3>\r\n               <form>\r\n                  <div className='mb-3'>\r\n                  <label className='form-label'>Avatar Image (Optional)</label>\r\n                  <input\r\n                    type='file'\r\n                    className='form-control'\r\n                    id='file'\r\n                    \r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                  />\r\n                </div>\r\n                \r\n                <h4 className='mb-3'>{loading?'Uploading...': !loading&&fileSystem?<AiFillFileImage style={{fontSize: '50px', color: 'magenta'}}/>:''}</h4>\r\n                \r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-secondary mb-3'\r\n                 onClick={ uploadImage}>Upload</button>\r\n\r\n\r\n\r\n              </form>\r\n              <form onSubmit={onSubmit}>\r\n              \r\n\r\n               {errorMessage &&  <h3>{errorMessage}</h3>}\r\n                 <div className='mb-3'>\r\n                  <label className='form-label'>Name</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Email</label>\r\n                  <input\r\n                    type='email'\r\n                    className='form-control'\r\n                    id='email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Password</label>\r\n                  <input\r\n                    type='password'\r\n                    className='form-control'\r\n                    id='password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className='mb-3'>\r\n                  <label className='form-label'>Role</label>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    id='role'\r\n                    value={role}\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-secondary'\r\n                >\r\n                  Update Profile\r\n                </button>\r\n                \r\n              </form>\r\n            </div>\r\n           </div>\r\n\r\n  )\r\n}\r\n\r\nexport default EditProfileForm\r\n","import React from 'react'\r\nimport {Link,} from 'react-router-dom'\r\nimport Spinner from '../components/Spinner'\r\nimport { useQuery,} from '@apollo/client'\r\nimport { GET_USER, } from '../queries/user'\r\nimport DeleteUserButton from '../components/DeleteUserButton'\r\nimport EditProfileForm from '../components/EditProfileForm'\r\n\r\nconst Profile = ({user, setUser}) => {\r\n\r\n\r\n const id = user?user.id:'';\r\n const{loading, error, data} = useQuery(GET_USER, {\r\n  variables: {\r\n   id: id\r\n  }\r\n })\r\n const name = data?data.user.name:''\r\n const userName = name?name.charAt(0):''\r\n if(loading) return <Spinner/>;\r\n if(error) return <h4>Something Went Wrong!</h4>\r\nconst checkAdmin = user? user.role: '';\r\nconst isAdmin = checkAdmin==='authorizedAdmin'\r\n  return (\r\n    <>\r\n      {!loading && !error && (\r\n       <div className=\"container d-flex justify-content-center align-content-center mx-auto w-75 card p-5 shadow-lg rounded-5\" style={{height: '600px'}}>\r\n        <Link to={isAdmin?'/adminDashboard':'/userDashboard'} className='btn btn-light btn-sm w-25 d-inline ms-auto mt-2'>Back</Link>\r\n        {data.user.fileSystem?<img className=\"avatar profile-nav avatar-16 bg-light rounded-circle text-white\" src={data.user.fileSystem} alt={data.user.name}/>:\r\n        <span class=\"avatar profile-text text-nav avatar-26  bg-success text-white rounded-circle d-flex justify-content-center align-items-center\" style={{width: '10rem', height: '10rem', fontSize:'5rem'}}>{userName}</span> }\r\n\r\n        <h1 style={{margin: 'auto'}}>Name: </h1>\r\n        <h5 style={{margin: 'auto'}}>{data.user.name}</h5>\r\n        <h1 className=\"mt-2\" style={{margin: 'auto'}}>Email</h1>\r\n        <h5 style={{margin: 'auto'}}>{data.user.email}</h5>\r\n        <h1 className=\"mt-2\" style={{margin: 'auto'}}>Role</h1>\r\n        <h5 style={{margin: 'auto'}}>{data.user.role}</h5>\r\n\r\n\r\n\r\n\r\n       </div>\r\n      )}\r\n      <EditProfileForm user={data.user}/>\r\n      <DeleteUserButton id={data.user.id} user={user} setUser={setUser}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport './Stat.css'\r\n\r\n\r\nconst Stat = ({stat}) => {\r\n  return (\r\n     <div className='card row' style={{borderBottom: `5px solid ${stat.color}`}}>\r\n      <div>\r\n        <div className='info col'>\r\n          <div>{stat.icon}</div>\r\n          <h4> {stat.amount}</h4>\r\n        </div>\r\n      <h6>{stat.title}</h6>\r\n      </div>\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Stat\r\n","import React  from 'react'\r\nimport { GET_TASKS } from '../queries/taskQueries'\r\nimport {FETCH_USERS} from '../queries/user'\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries'\r\nimport { useQuery } from '@apollo/client'\r\nimport {MdDirectionsRun} from 'react-icons/md'\r\nimport {MdBrightnessMedium} from 'react-icons/md'\r\nimport {MdBrightnessLow} from 'react-icons/md'\r\nimport {MdCallToAction} from 'react-icons/md'\r\nimport {MdAssignmentTurnedIn} from 'react-icons/md'\r\nimport {SiMicrosoftteams} from 'react-icons/si'\r\nimport {GiTeamUpgrade} from 'react-icons/gi'\r\nimport {FaTasks} from 'react-icons/fa'\r\nimport Stat from '../components/Stat'\r\nimport BarChart from '../components/BarChart'\r\n\r\n\r\nconst AdminStatistics = () => {\r\n\r\n\r\n\r\n  const getTasks = () => {\r\n    const{data}= useQuery(GET_TASKS)\r\n    const tasks = data?data.tasks:[]\r\n    return tasks;\r\n  }\r\n\r\n  const getUsers  = () => {\r\n    const{data}= useQuery(FETCH_USERS)\r\n    const users = data?data.users:[]\r\n    return users\r\n  }\r\n\r\n  const getTeamMembers  = () => {\r\n    const{data}= useQuery(GET_TEAM_MEMBERS)\r\n    const teamMembers = data?data.teamMembers:[]\r\n    return teamMembers\r\n  }\r\n const tasks = getTasks();\r\n const users = getUsers();\r\n const teamMembers = getTeamMembers();\r\n\r\n\r\n const pendingTasks = tasks.filter(task=>task.status === 'Pending').length\r\n\r\n const completedTasks = tasks.filter(task=>task.status === 'Completed').length\r\n const priorityOne = tasks.filter(task=>task.priority === '#1').length\r\n const priorityTwo = tasks.filter(task=>task.priority === '#2').length\r\n const priorityThree = tasks.filter(task=>task.priority === '#r').length\r\n\r\n const totalTasks = tasks.length\r\n\r\n const totalUsers = users.length\r\n\r\n const totalTeamMembers = teamMembers.length\r\n\r\n let monthlyCreated;\r\nlet monthlyCompleted;\r\n\r\n\r\nconst monthsPending = tasks.filter(task=>task.status === 'Pending')\r\nconst monthCreatedPending = monthsPending.map(task=>{\r\n  return task.createdAt})\r\nconst monthsCompleted = tasks.filter(task=>task.status === 'Completed')\r\nconst monthCompleted = monthsCompleted.map(task=>{\r\n  return task.updatedAt || task.createdAt})\r\n  const currentYear = new Date().getFullYear()\r\n\r\nconst createdInJanuary = monthCreatedPending.filter(task=>task.includes(`${currentYear}-01`)||task.includes(`${currentYear-1}-01`)).length\r\nconst createdInFebruary = monthCreatedPending.filter(task=>task.includes(`${currentYear}-02`)||task.includes(`${currentYear-1}-02`)).length\r\nconst createdInMarch = monthCreatedPending.filter(task=>task.includes(`${currentYear}-03`)||task.includes(`${currentYear-1}-03`)).length\r\nconst createdInApril = monthCreatedPending.filter(task=>task.includes(`${currentYear}-04`)||task.includes(`${currentYear-1}-04`)).length\r\nconst createdInMay = monthCreatedPending.filter(task=>task.includes(`${currentYear}-05`)||task.includes(`${currentYear-1}-05`)).length\r\nconst createdInJune = monthCreatedPending.filter(task=>task.includes(`${currentYear}-06`)||task.includes(`${currentYear-1}-06`)).length\r\nconst createdInJuly = monthCreatedPending.filter(task=>task.includes(`${currentYear}-07`)||task.includes(`${currentYear-1}-07`)).length\r\nconst createdInAugust = monthCreatedPending.filter(task=>task.includes(`${currentYear}-08`)||task.includes(`${currentYear-1}-08`)).length\r\nconst createdInSeptember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-09`)||task.includes(`${currentYear-1}-09`)).length\r\nconst createdInOctober = monthCreatedPending.filter(task=>task.includes(`${currentYear}-10`)||task.includes(`${currentYear-1}-10`)).length\r\nconst createdInNovember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-11`)||task.includes(`${currentYear-1}-11`)).length\r\nconst createdInDecember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-12`)||task.includes(`${currentYear-1}-12`)).length\r\n\r\nmonthlyCreated=[createdInJanuary, createdInFebruary, createdInMarch, createdInApril, createdInMay, createdInJune, createdInJuly, createdInAugust, createdInSeptember, createdInOctober, createdInNovember, createdInDecember]\r\n\r\n\r\n\r\n\r\n\r\nconst completedInJanuary = monthCompleted.filter(task=>task.includes(`${currentYear}-01`)||task.includes(`${currentYear-1}-01`)).length\r\nconst completedInFebruary = monthCompleted.filter(task=>task.includes(`${currentYear}-02`)||task.includes(`${currentYear-1}-02`)).length\r\nconst completedInMarch = monthCompleted.filter(task=>task.includes(`${currentYear}-03`)||task.includes(`${currentYear-1}-03`)).length\r\nconst completedInApril = monthCompleted.filter(task=>task.includes(`${currentYear}-04`)||task.includes(`${currentYear-1}-04`)).length\r\nconst completedInMay = monthCompleted.filter(task=>task.includes(`${currentYear}-05`)||task.includes(`${currentYear-1}-05`)).length\r\nconst completedInJune = monthCompleted.filter(task=>task.includes(`${currentYear}-06`)||task.includes(`${currentYear-1}-06`)).length\r\nconst completedInJuly = monthCompleted.filter(task=>task.includes(`${currentYear}-07`)||task.includes(`${currentYear-1}-07`)).length\r\nconst completedInAugust = monthCompleted.filter(task=>task.includes(`${currentYear}-08`)||task.includes(`${currentYear-1}-08`)).length\r\nconst completedInSeptember = monthCompleted.filter(task=>task.includes(`${currentYear}-09`)||task.includes(`${currentYear-1}-09`)).length\r\nconst completedInOctober = monthCompleted.filter(task=>task.includes(`${currentYear}-10`)||task.includes(`${currentYear-1}-10`)).length\r\nconst completedInNovember = monthCompleted.filter(task=>task.includes(`${currentYear}-11`)||task.includes(`${currentYear-1}-11`)).length\r\nconst completedInDecember = monthCompleted.filter(task=>task.includes(`${currentYear}-12`)||task.includes(`${currentYear-1}-12`)).length\r\n\r\nmonthlyCompleted=[completedInJanuary, completedInFebruary, completedInMarch, completedInApril, completedInMay, completedInJune, completedInJuly, completedInAugust, completedInSeptember, completedInOctober, completedInNovember, completedInDecember]\r\n\r\nlet months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n\r\nconst currentMonth = new Date().getMonth() + 1;\r\n\r\nconst recentMonths = months.slice(0, currentMonth)\r\nconst earlierMonths = months.slice(currentMonth, months.length)\r\nmonths = [...earlierMonths, ...recentMonths]\r\n\r\n\r\nconst recentCreated = monthlyCreated.slice(0, currentMonth);\r\nconst earlierCreated = monthlyCreated.slice(currentMonth, monthlyCreated.length)\r\n\r\nmonthlyCreated = [...earlierCreated, ...recentCreated]\r\n\r\nconst recentCompleted = monthlyCompleted.slice(0, currentMonth);\r\nconst earlierCompleted = monthlyCompleted.slice(currentMonth, monthlyCompleted.length)\r\n\r\nmonthlyCompleted = [...earlierCompleted, ...recentCompleted]\r\n\r\n\r\n const stats = [\r\n  {title: 'Priority One', amount: priorityOne, color: 'teal', icon: <MdDirectionsRun style={{color:'teal'}}/>}, \r\n  {title: 'Priority Two', amount: priorityTwo, color: 'darkred', icon: <MdBrightnessMedium style={{color:'darkred'}}/>},\r\n  {title: 'Priority Three', amount: priorityThree, color: 'purple', icon: <MdBrightnessLow style={{color:'purple', opacity: '0.6'}}/>},\r\n  {title: 'Pending Tasks', amount: pendingTasks,color: 'magenta', icon: <MdCallToAction style={{color:'magenta'}}/>}, \r\n  { title: 'Completed Tasks', amount: completedTasks, color: 'green', icon: <MdAssignmentTurnedIn style={{color:'green'}}/>}, \r\n  { title: 'Total Tasks', amount: totalTasks, color: 'crimson', icon: <FaTasks style={{color:'crimson'}}/>}, \r\n  { title: 'Total Users', amount: totalUsers, color: 'goldenrod', icon: <GiTeamUpgrade style={{color:'goldenrod'}}/>}, \r\n  { title: 'Total Team Members', amount: totalTeamMembers, color: 'black', icon: <SiMicrosoftteams style={{color:'crimson'}}/>}, \r\n ]\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container mt-4'>\r\n        <div className=\"col-sm d-flex justify-content-center mb-4 text-success\">\r\n          <h3>Stats</h3>\r\n        </div>\r\n        <div className=\"container stat\">\r\n\r\n       {stats.map((stat, index)=>{\r\n        return <Stat key={index} stat={stat}/>\r\n       })}\r\n        </div>\r\n       </div>\r\n       <br/>\r\n      <div className='d-flex justify-content-center align-items-center mt-5 bg-inherit chart'>\r\n        <BarChart chartData={{labels: months,\r\n        datasets:[{ \r\n          label: 'Created In last 12 Months',data:monthlyCreated,\r\n          backgroundColor:[\"darkred\",],\r\n        }],\r\n        \r\n      }}/>\r\n        <BarChart chartData={{labels: months,\r\n        datasets:[{ \r\n          label: 'Completed In Last 12 Months',\r\n          data: monthlyCompleted,\r\n          backgroundColor:[\"green\",]\r\n        }],\r\n        \r\n      }}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminStatistics\r\n","import React  from 'react'\r\nimport { GET_TASKS } from '../queries/taskQueries'\r\nimport { GET_TEAM_MEMBERS } from '../queries/teamMemberQueries'\r\nimport { useQuery } from '@apollo/client'\r\nimport {MdDirectionsRun} from 'react-icons/md'\r\nimport {MdBrightnessMedium} from 'react-icons/md'\r\nimport {MdBrightnessLow} from 'react-icons/md'\r\nimport {MdCallToAction} from 'react-icons/md'\r\nimport {MdAssignmentTurnedIn} from 'react-icons/md'\r\nimport {SiMicrosoftteams} from 'react-icons/si'\r\nimport {FaTasks} from 'react-icons/fa'\r\nimport Stat from '../components/Stat'\r\nimport BarChart from '../components/BarChart'\r\n\r\n\r\nconst UserStatistics = ({user}) => {\r\n\r\nconst id = user?user.id:'';\r\n\r\n  const getTasks = () => {\r\n    const{data}= useQuery(GET_TASKS)\r\n    const tasks = data?data.tasks:[]\r\n    return tasks.filter(task=>task.creatorId===id);\r\n  }\r\n\r\n\r\n  const getTeamMembers  = () => {\r\n    const{data}= useQuery(GET_TEAM_MEMBERS)\r\n    const teamMembers = data?data.teamMembers:[]\r\n    return teamMembers.filter(teamMember=>teamMember.creatorId===id)\r\n  }\r\n const tasks = getTasks();\r\n const teamMembers = getTeamMembers();\r\n\r\n\r\n const pendingTasks = tasks.filter(task=>task.status === 'Pending').length\r\n\r\n const completedTasks = tasks.filter(task=>task.status === 'Completed').length\r\n const priorityOne = tasks.filter(task=>task.priority === '#1').length\r\n const priorityTwo = tasks.filter(task=>task.priority === '#2').length\r\n const priorityThree = tasks.filter(task=>task.priority === '#r').length\r\n\r\n const totalTasks = tasks.length\r\n\r\n\r\n const totalTeamMembers = teamMembers.length\r\n\r\n let monthlyCreated;\r\nlet monthlyCompleted;\r\n\r\n\r\nconst monthsPending = tasks.filter(task=>task.status === 'Pending')\r\nconst monthCreatedPending = monthsPending.map(task=>{\r\n  return task.createdAt})\r\nconst monthsCompleted = tasks.filter(task=>task.status === 'Completed')\r\nconst monthCompleted = monthsCompleted.map(task=>{\r\n  return task.updatedAt || task.createdAt})\r\n  const currentYear = new Date().getFullYear()\r\n\r\nconst createdInJanuary = monthCreatedPending.filter(task=>task.includes(`${currentYear}-01`)||task.includes(`${currentYear-1}-01`)).length \r\nconst createdInFebruary = monthCreatedPending.filter(task=>task.includes(`${currentYear}-02`)||task.includes(`${currentYear-1}-02`)).length \r\nconst createdInMarch = monthCreatedPending.filter(task=>task.includes(`${currentYear}-03`)||task.includes(`${currentYear-1}-03`)).length \r\nconst createdInApril = monthCreatedPending.filter(task=>task.includes(`${currentYear}-04`)||task.includes(`${currentYear-1}-04`)).length \r\nconst createdInMay = monthCreatedPending.filter(task=>task.includes(`${currentYear}-05`)||task.includes(`${currentYear-1}-05`)).length \r\nconst createdInJune = monthCreatedPending.filter(task=>task.includes(`${currentYear}-06`)||task.includes(`${currentYear-1}-06`)).length \r\nconst createdInJuly = monthCreatedPending.filter(task=>task.includes(`${currentYear}-07`)||task.includes(`${currentYear-1}-07`)).length \r\nconst createdInAugust = monthCreatedPending.filter(task=>task.includes(`${currentYear}-08`)||task.includes(`${currentYear-1}-08`)).length \r\nconst createdInSeptember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-09`)||task.includes(`${currentYear-1}-09`)).length \r\nconst createdInOctober = monthCreatedPending.filter(task=>task.includes(`${currentYear}-10`)||task.includes(`${currentYear-1}-10`)).length\r\nconst createdInNovember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-11`)||task.includes(`${currentYear-1}-11`)).length \r\nconst createdInDecember = monthCreatedPending.filter(task=>task.includes(`${currentYear}-12`)||task.includes(`${currentYear-1}-12`)).length \r\n\r\nmonthlyCreated=[createdInJanuary, createdInFebruary, createdInMarch, createdInApril, createdInMay, createdInJune, createdInJuly, createdInAugust, createdInSeptember, createdInOctober, createdInNovember, createdInDecember]\r\n\r\n\r\n\r\n\r\n\r\nconst completedInJanuary = monthCompleted.filter(task=>task.includes(`${currentYear}-01`)||task.includes(`${currentYear-1}-01`)).length \r\nconst completedInFebruary = monthCompleted.filter(task=>task.includes(`${currentYear}-02`)||task.includes(`${currentYear-1}-02`)).length \r\nconst completedInMarch = monthCompleted.filter(task=>task.includes(`${currentYear}-03`)||task.includes(`${currentYear-1}-03`)).length \r\nconst completedInApril = monthCompleted.filter(task=>task.includes(`${currentYear}-04`)||task.includes(`${currentYear-1}-04`)).length \r\nconst completedInMay = monthCompleted.filter(task=>task.includes(`${currentYear}-05`)||task.includes(`${currentYear-1}-05`)).length \r\nconst completedInJune = monthCompleted.filter(task=>task.includes(`${currentYear}-06`)||task.includes(`${currentYear-1}-06`)).length \r\nconst completedInJuly = monthCompleted.filter(task=>task.includes(`${currentYear}-07`)||task.includes(`${currentYear-1}-07`)).length \r\nconst completedInAugust = monthCompleted.filter(task=>task.includes(`${currentYear}-08`)||task.includes(`${currentYear-1}-08`)).length \r\nconst completedInSeptember = monthCompleted.filter(task=>task.includes(`${currentYear}-09`)||task.includes(`${currentYear-1}-09`)).length \r\nconst completedInOctober = monthCompleted.filter(task=>task.includes(`${currentYear}-10`)||task.includes(`${currentYear-1}-10`)).length \r\nconst completedInNovember = monthCompleted.filter(task=>task.includes(`${currentYear}-11`)||task.includes(`${currentYear-1}-11`)).length \r\nconst completedInDecember = monthCompleted.filter(task=>task.includes(`${currentYear}-12`)||task.includes(`${currentYear-1}-12`)).length \r\n\r\nmonthlyCompleted=[completedInJanuary, completedInFebruary, completedInMarch, completedInApril, completedInMay, completedInJune, completedInJuly, completedInAugust, completedInSeptember, completedInOctober, completedInNovember, completedInDecember]\r\n\r\nlet months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n\r\nconst currentMonth = new Date().getMonth() + 1;\r\n\r\nconst recentMonths = months.slice(0, currentMonth)\r\nconst earlierMonths = months.slice(currentMonth, months.length)\r\nmonths = [...earlierMonths, ...recentMonths]\r\n\r\n\r\nconst recentCreated = monthlyCreated.slice(0, currentMonth);\r\nconst earlierCreated = monthlyCreated.slice(currentMonth, monthlyCreated.length)\r\n\r\nmonthlyCreated = [...earlierCreated, ...recentCreated]\r\n\r\nconst recentCompleted = monthlyCompleted.slice(0, currentMonth);\r\nconst earlierCompleted = monthlyCompleted.slice(currentMonth, monthlyCompleted.length)\r\n\r\nmonthlyCompleted = [...earlierCompleted, ...recentCompleted]\r\n\r\n\r\n const stats = [\r\n  {title: 'Priority One', amount: priorityOne, color: 'teal', icon: <MdDirectionsRun style={{color:'teal'}}/>}, \r\n  {title: 'Priority Two', amount: priorityTwo, color: 'darkred', icon: <MdBrightnessMedium style={{color:'darkred'}}/>},\r\n  {title: 'Priority Three', amount: priorityThree, color: 'purple', icon: <MdBrightnessLow style={{color:'purple', opacity: '0.6'}}/>},\r\n  {title: 'Pending Tasks', amount: pendingTasks,color: 'magenta', icon: <MdCallToAction style={{color:'magenta'}}/>}, \r\n  { title: 'Completed Tasks', amount: completedTasks, color: 'green', icon: <MdAssignmentTurnedIn style={{color:'green'}}/>}, \r\n  { title: 'Total Tasks', amount: totalTasks, color: 'crimson', icon: <FaTasks style={{color:'crimson'}}/>}, \r\n  { title: 'Total Team Members', amount: totalTeamMembers, color: 'black', icon: <SiMicrosoftteams style={{color:'crimson'}}/>}, \r\n ]\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container mt-4'>\r\n        <div className=\"col-sm d-flex justify-content-center mb-4 text-success\">\r\n          <h3>Stats</h3>\r\n        </div>\r\n        <div className=\"container stat\">\r\n\r\n       {stats.map((stat, index)=>{\r\n        return <Stat key={index} stat={stat}/>\r\n       })}\r\n        </div>\r\n       </div>\r\n      <div className=\" d-flex justify-content-center align-items-center mt-5\">\r\n       <h3 style={{color: 'teal', textDecoration: 'underline'}}>Charts</h3>\r\n      </div>\r\n\r\n      <br/>\r\n\r\n      <div className='d-flex justify-content-center align-items-center mt-5 bg-inherit chart'>\r\n        <BarChart chartData={{labels: months,\r\n        datasets:[{ \r\n          label: 'Created In last 12 Months',data:monthlyCreated,\r\n          backgroundColor:[\"darkred\",],\r\n        }],\r\n        \r\n      }}/>\r\n        <BarChart chartData={{labels: months,\r\n        datasets:[{ \r\n          label: 'Completed In Last 12 Months',\r\n          data: monthlyCompleted,\r\n          backgroundColor:[\"green\",]\r\n        }],\r\n        \r\n      }}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserStatistics\r\n","import React, {useState} from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport {ApolloProvider, ApolloClient, InMemoryCache} from '@apollo/client'\nimport Sidebar from './components/Sidebar';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Task from './pages/Task'\nimport Auth from './components/Auth';\nimport AdminDashboard from './pages/AdminDashboard';\nimport UserDashboard from './pages/UserDashboard'\nimport TeamMembers from './pages/TeamMembers';\nimport UserTeamMembers from './pages/UserTeamMembers';\nimport AllUsers from './components/AllUsers';\nimport Unauthorized from './pages/Unauthorized';\nimport AssignedToYou from './pages/AssignedToYou';\nimport Profile from './pages/Profile'\nimport AdminStatistics from './pages/AdminStatistics';\nimport UserStatistics from './pages/UserStatistics';\n\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        teamMembers: {\n          merge(existing, incoming){\n            return incoming;\n          },\n          \n        },\n        users: {\n          merge(existing, incoming){\n            return incoming;\n          },\n          \n        },\n        tasks: {\n          merge(existing, incoming){\n            return incoming;\n          },\n          \n        },\n         task: {\n          merge(existing, incoming){\n            return incoming;\n          },\n          \n        }\n\n\n      }\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache,\n})\n\nfunction App() {\n  const[showSidebar, setShowSidebar] = useState(true)\n  const[user, setUser] = useState(localStorage.getItem('user'))\n  const checkAdmin = user?user.role:'';\n  const isAdmin = checkAdmin ==='authorizedAdmin'\n  return (\n  <ApolloProvider client={client}>\n    <div className='wrapper'>\n  \n  <BrowserRouter>\n    <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} user={user}/>\n    <div id='content'>\n    <Header user={user} setUser={setUser} showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\n    <Routes>\n      <Route path='/' element={<Home/>}/>\n      <Route path='/adminDashboard' element={isAdmin?<AdminDashboard user={user}/>:<Unauthorized/>}/>\n      <Route path='/userDashboard' element={<UserDashboard user={user} />}/>\n      <Route path='auth' element={<Auth user={user} setUser= {setUser} />}/>\n      <Route path='allUsers' element={<AllUsers/>}/>\n      <Route path='allTeamMembers' element={<TeamMembers user={user}/>}/>\n      <Route path='userTeamMembers' element={<UserTeamMembers user={user}/>}/>\n      <Route path='tasks/:id' element={<Task user={user}/>}/>\n      <Route path='assignedToYou' element={<AssignedToYou user={user}/>} />\n      <Route path='profile' element={<Profile user={user} setUser={setUser}/>} />\n      <Route path='allStats' element={<AdminStatistics/>} />\n      <Route path='userStats' element={<UserStatistics user={user}/>} />\n      \n      <Route path='*' element={<NotFound user={user} setUser={setUser}/>}/>\n  </Routes>\n    </div>\n    \n  </BrowserRouter>  \n    </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />,\n   </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/hero1.9abed947.jpg\";"],"sourceRoot":""}